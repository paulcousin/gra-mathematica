(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    250377,       4825]
NotebookOptionsPosition[    248538,       4781]
NotebookOutlinePosition[    249044,       4799]
CellTagsIndexPosition[    249001,       4796]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Interactive modules for Graph-Rewriting Automata \
exploration",
 FontSize->36]], "Title",
 CellChangeTimes->{{3.869122051601893*^9, 3.869122055997027*^9}, {
  3.870158776167776*^9, 
  3.8701588098261766`*^9}},ExpressionUUID->"97c541a1-e5a6-4c52-a03f-\
611bfc4ac6e8"],

Cell["Paul Cousin", "Author",
 CellChangeTimes->{{3.870513247747292*^9, 
  3.87051325091107*^9}},ExpressionUUID->"86c5f2e4-1932-4580-b905-\
e0648ac0836b"],

Cell["", "Text",ExpressionUUID->"f25444f9-5e36-4e3e-aba1-b1dc74728883"],

Cell[CellGroupData[{

Cell["Rules", "Section",
 CellChangeTimes->{{3.8691220770155*^9, 
  3.869122077718484*^9}},ExpressionUUID->"c6af423b-65b0-4ef3-abf0-\
0912e38937c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "graph1", ",", "graph2", ",", "number", ",", "digits", ",", "rule", ",", 
     "color0", ",", "color1", ",", "color2", ",", "color3", ",", "color4", 
     ",", "color5", ",", "color6", ",", "color7"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"graph1", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[UndirectedEdge]", "1"}], ",", 
         RowBox[{"0", "\[UndirectedEdge]", "2"}], ",", 
         RowBox[{"0", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "0.4"}], ",", 
       RowBox[{"ImageSize", "->", "40"}], ",", " ", 
       RowBox[{"GraphLayout", "\[Rule]", "\"\<RadialEmbedding\>\""}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"graph2", " ", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "\[UndirectedEdge]", "1"}], ",", 
         RowBox[{"20", "\[UndirectedEdge]", "2"}], ",", 
         RowBox[{"30", "\[UndirectedEdge]", "3"}], ",", 
         RowBox[{"10", "\[UndirectedEdge]", "20"}], ",", 
         RowBox[{"20", "\[UndirectedEdge]", "30"}], ",", 
         RowBox[{"30", "\[UndirectedEdge]", "10"}]}], "}"}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "0.55"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "43"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"digits", ":=", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"number", ",", "2", ",", "16"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"color0", ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"digits", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "==", "0"}], ",", 
            TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
             "RGBColorSwatchTemplate"], ",", 
            TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
             "RGBColorSwatchTemplate"]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"color1", ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"digits", "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}], "==", "0"}], ",", 
            TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
             "RGBColorSwatchTemplate"], ",", 
            TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
             "RGBColorSwatchTemplate"]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"color2", ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"digits", "[", 
              RowBox[{"[", 
               RowBox[{"-", "3"}], "]"}], "]"}], "==", "0"}], ",", 
            TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
             "RGBColorSwatchTemplate"], ",", 
            TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
             "RGBColorSwatchTemplate"]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"color3", ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"digits", "[", 
              RowBox[{"[", 
               RowBox[{"-", "4"}], "]"}], "]"}], "==", "0"}], ",", 
            TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
             "RGBColorSwatchTemplate"], ",", 
            TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
             "RGBColorSwatchTemplate"]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"color4", ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"digits", "[", 
              RowBox[{"[", 
               RowBox[{"-", "5"}], "]"}], "]"}], "==", "0"}], ",", 
            TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
             "RGBColorSwatchTemplate"], ",", 
            TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
             "RGBColorSwatchTemplate"]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"color5", ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"digits", "[", 
              RowBox[{"[", 
               RowBox[{"-", "6"}], "]"}], "]"}], "==", "0"}], ",", 
            TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
             "RGBColorSwatchTemplate"], ",", 
            TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
             "RGBColorSwatchTemplate"]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"color6", ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"digits", "[", 
              RowBox[{"[", 
               RowBox[{"-", "7"}], "]"}], "]"}], "==", "0"}], ",", 
            TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
             "RGBColorSwatchTemplate"], ",", 
            TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
             "RGBColorSwatchTemplate"]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"color7", ":=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"digits", "[", 
              RowBox[{"[", 
               RowBox[{"-", "8"}], "]"}], "]"}], "==", "0"}], ",", 
            TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
             "RGBColorSwatchTemplate"], ",", 
            TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
             "RGBColorSwatchTemplate"]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rule", "=", 
          RowBox[{"Framed", "@", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"number", "\"\<=\>\"", 
                 RowBox[{"BaseForm", "[", 
                  RowBox[{"number", ",", "2"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], "->", 
                    RowBox[{"Button", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "16"}], "]"}], "]"}], "==", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", "color7"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph2", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"10", "\[Rule]", "color7"}], ",", 
                    RowBox[{"20", "\[Rule]", "color7"}], ",", 
                    RowBox[{"30", "\[Rule]", "color7"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"180", " ", "Degree"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "8"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", " ", 
                    SuperscriptBox["2", "7"]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "16"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", 
                    RowBox[{
                    SuperscriptBox["2", "15"], "-", 
                    SuperscriptBox["2", "7"]}]}], ",", 
                    RowBox[{"number", "-=", 
                    RowBox[{
                    SuperscriptBox["2", "15"], "+", 
                    SuperscriptBox["2", "7"]}]}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"60", ",", "60"}], "}"}]}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", "True"}], ",", " ", 
                    RowBox[{"FrameMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"60", ",", " ", "Automatic"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", " ", "70"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".4"}]}], "}"}]}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], "->", 
                    RowBox[{"Button", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "15"}], "]"}], "]"}], "==", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", "color6"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph2", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"10", "\[Rule]", "color6"}], ",", 
                    RowBox[{"20", "\[Rule]", "color6"}], ",", 
                    RowBox[{"30", "\[Rule]", "color6"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"180", " ", "Degree"}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "7"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", " ", 
                    SuperscriptBox["2", "6"]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "15"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", 
                    RowBox[{
                    SuperscriptBox["2", "14"], "-", 
                    SuperscriptBox["2", "6"]}]}], ",", 
                    RowBox[{"number", "-=", 
                    RowBox[{
                    SuperscriptBox["2", "14"], "+", 
                    SuperscriptBox["2", "6"]}]}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"60", ",", "60"}], "}"}]}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", "True"}], ",", " ", 
                    RowBox[{"FrameMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"60", ",", " ", "Automatic"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", " ", "70"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".4"}]}], "}"}]}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], "->", 
                    RowBox[{"Button", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "14"}], "]"}], "]"}], "==", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", "color5"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph2", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"10", "\[Rule]", "color5"}], ",", 
                    RowBox[{"20", "\[Rule]", "color5"}], ",", 
                    RowBox[{"30", "\[Rule]", "color5"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"180", " ", "Degree"}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "6"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", " ", 
                    SuperscriptBox["2", "5"]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "14"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", 
                    RowBox[{
                    SuperscriptBox["2", "13"], "-", 
                    SuperscriptBox["2", "5"]}]}], ",", 
                    RowBox[{"number", "-=", 
                    RowBox[{
                    SuperscriptBox["2", "13"], "+", 
                    SuperscriptBox["2", "5"]}]}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"60", ",", "60"}], "}"}]}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", "True"}], ",", " ", 
                    RowBox[{"FrameMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"60", ",", " ", "Automatic"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", " ", "70"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".4"}]}], "}"}]}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], "->", 
                    RowBox[{"Button", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "13"}], "]"}], "]"}], "==", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", "color4"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph2", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"10", "\[Rule]", "color4"}], ",", 
                    RowBox[{"20", "\[Rule]", "color4"}], ",", 
                    RowBox[{"30", "\[Rule]", "color4"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"180", " ", "Degree"}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "5"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", " ", 
                    SuperscriptBox["2", "4"]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "13"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", 
                    RowBox[{
                    SuperscriptBox["2", "12"], "-", 
                    SuperscriptBox["2", "4"]}]}], ",", 
                    RowBox[{"number", "-=", 
                    RowBox[{
                    SuperscriptBox["2", "12"], "+", 
                    SuperscriptBox["2", "4"]}]}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"60", ",", "60"}], "}"}]}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", "True"}], ",", " ", 
                    RowBox[{"FrameMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"60", ",", " ", "Automatic"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", " ", "70"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".4"}]}], "}"}]}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], "->", 
                    RowBox[{"Button", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "12"}], "]"}], "]"}], "==", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", "color3"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph2", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"10", "\[Rule]", "color3"}], ",", 
                    RowBox[{"20", "\[Rule]", "color3"}], ",", 
                    RowBox[{"30", "\[Rule]", "color3"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"180", " ", "Degree"}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "4"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", " ", 
                    SuperscriptBox["2", "3"]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "12"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", 
                    RowBox[{
                    SuperscriptBox["2", "11"], "-", 
                    SuperscriptBox["2", "3"]}]}], ",", 
                    RowBox[{"number", "-=", 
                    RowBox[{
                    SuperscriptBox["2", "11"], "+", 
                    SuperscriptBox["2", "3"]}]}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"60", ",", "60"}], "}"}]}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", "True"}], ",", " ", 
                    RowBox[{"FrameMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"60", ",", " ", "Automatic"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", " ", "70"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".4"}]}], "}"}]}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], "->", 
                    RowBox[{"Button", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "11"}], "]"}], "]"}], "==", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", "color2"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph2", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"10", "\[Rule]", "color2"}], ",", 
                    RowBox[{"20", "\[Rule]", "color2"}], ",", 
                    RowBox[{"30", "\[Rule]", "color2"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"180", " ", "Degree"}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "3"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", " ", 
                    SuperscriptBox["2", "2"]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "11"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", 
                    RowBox[{
                    SuperscriptBox["2", "10"], "-", 
                    SuperscriptBox["2", "2"]}]}], ",", 
                    RowBox[{"number", "-=", 
                    RowBox[{
                    SuperscriptBox["2", "10"], "+", 
                    SuperscriptBox["2", "2"]}]}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"60", ",", "60"}], "}"}]}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", "True"}], ",", " ", 
                    RowBox[{"FrameMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"60", ",", " ", "Automatic"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", " ", "70"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".4"}]}], "}"}]}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], "->", 
                    RowBox[{"Button", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "10"}], "]"}], "]"}], "==", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", "color1"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph2", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"10", "\[Rule]", "color1"}], ",", 
                    RowBox[{"20", "\[Rule]", "color1"}], ",", 
                    RowBox[{"30", "\[Rule]", "color1"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"180", " ", "Degree"}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", " ", 
                    SuperscriptBox["2", "1"]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "10"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", 
                    RowBox[{
                    SuperscriptBox["2", "9"], "-", 
                    SuperscriptBox["2", "1"]}]}], ",", 
                    RowBox[{"number", "-=", 
                    RowBox[{
                    SuperscriptBox["2", "9"], "+", 
                    SuperscriptBox["2", "1"]}]}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"60", ",", "60"}], "}"}]}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", "True"}], ",", " ", 
                    RowBox[{"FrameMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"60", ",", " ", "Automatic"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", " ", "70"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".4"}]}], "}"}]}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], "->", 
                    RowBox[{"Button", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "9"}], "]"}], "]"}], "==", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph1", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", "color0"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph2", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"10", "\[Rule]", "color0"}], ",", 
                    RowBox[{"20", "\[Rule]", "color0"}], ",", 
                    RowBox[{"30", "\[Rule]", "color0"}], ",", 
                    RowBox[{"1", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"2", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                    RowBox[{"3", "\[Rule]", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>,
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"180", " ", "Degree"}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", " ", 
                    SuperscriptBox["2", "0"]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"digits", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "9"}], "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"number", "+=", 
                    RowBox[{
                    SuperscriptBox["2", "8"], "-", 
                    SuperscriptBox["2", "0"]}]}], ",", 
                    RowBox[{"number", "-=", 
                    RowBox[{
                    SuperscriptBox["2", "8"], "+", 
                    SuperscriptBox["2", "0"]}]}]}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"60", ",", "60"}], "}"}]}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", "True"}], ",", " ", 
                    RowBox[{"FrameMargins", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"60", ",", " ", "Automatic"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", " ", "70"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".4"}]}], "}"}]}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                   "}"}], ",", 
                  RowBox[{"Spacings", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"1.5", ",", ".5"}], "}"}]}]}], "]"}], "}"}]}], 
              "}"}], ",", 
             RowBox[{"ItemSize", "\[Rule]", "42"}]}], "]"}]}]}]}], ",", 
        RowBox[{"{", "number", "}"}]}], "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"number", ",", "240", ",", "\"\<rule number\>\""}], "}"}], 
         ",", "0", ",", 
         RowBox[{"FieldSize", "->", "10"}]}], "}"}], "]"}]}], "]"}]}]}], 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.864913850308741*^9, 3.8649140815711946`*^9}, {
   3.8649608051729517`*^9, 3.864960831461227*^9}, {3.8649609417603197`*^9, 
   3.86496099594615*^9}, {3.864961196388678*^9, 3.864961265342845*^9}, {
   3.86496130334618*^9, 3.864961326417638*^9}, {3.86496136712424*^9, 
   3.864961469710155*^9}, {3.864961538341991*^9, 3.864961539162323*^9}, {
   3.864961569781475*^9, 3.864961669495022*^9}, {3.864961701800198*^9, 
   3.8649621054139843`*^9}, {3.864962142873117*^9, 3.8649621466251183`*^9}, {
   3.864962193162858*^9, 3.864962224374048*^9}, {3.864962260400693*^9, 
   3.8649624179031553`*^9}, {3.8649626114636707`*^9, 3.864962632122798*^9}, {
   3.8649627259114723`*^9, 3.8649627584878674`*^9}, 3.864962796668193*^9, {
   3.864962907055562*^9, 3.864963111679503*^9}, {3.8649632689496937`*^9, 
   3.864963340833859*^9}, {3.86496341557607*^9, 3.864963634718742*^9}, {
   3.864963744388274*^9, 3.864963879773965*^9}, {3.864963947532338*^9, 
   3.864964037453849*^9}, {3.8649643389733963`*^9, 3.864964350871407*^9}, {
   3.864964419756908*^9, 3.864964478271029*^9}, {3.8649645322578583`*^9, 
   3.864964587828396*^9}, {3.864964693433546*^9, 3.864964707498569*^9}, {
   3.8649647598045387`*^9, 3.864964797436713*^9}, {3.864964857240594*^9, 
   3.864964934016029*^9}, {3.864965060976293*^9, 3.864965240719784*^9}, {
   3.864965322797394*^9, 3.864965325500855*^9}, {3.8649653567014093`*^9, 
   3.864965441277051*^9}, {3.864965487084165*^9, 3.864965539894511*^9}, {
   3.864965680275714*^9, 3.864965814186417*^9}, {3.864965866319557*^9, 
   3.8649659088030033`*^9}, 3.864965954765297*^9, {3.8650448538178167`*^9, 
   3.865044858211955*^9}, {3.869122983999848*^9, 3.869123002205607*^9}, {
   3.869123098156015*^9, 3.869123183543775*^9}, {3.8691232369608793`*^9, 
   3.8691233219558887`*^9}, {3.869123367257497*^9, 3.869123378550036*^9}, {
   3.869126509334128*^9, 3.869126549970244*^9}, {3.8691265866868343`*^9, 
   3.869126588224111*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"517d5bcb-7972-4ef0-ab29-92906cc91c66"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`graph1$$ = 
  Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
   GraphLayout -> "RadialEmbedding", ImageSize -> 40, 
    VertexSize -> {0.4}}], $CellContext`graph2$$ = 
  Graph[{10, 1, 20, 2, 30, 3}, {
   Null, {{1, 2}, {3, 4}, {5, 6}, {1, 3}, {3, 5}, {5, 1}}}, {
   ImageSize -> 43, 
    VertexSize -> {0.55}}], $CellContext`number$$, $CellContext`digits$$ = {0,
   0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0}, $CellContext`rule$$ = Framed[
  
   Grid[{{240 "=" BaseForm[240, 2]}, {
      Grid[{{
        Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
           GraphLayout -> {
             "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
            ImageSize -> 40, VertexSize -> {0.4}, 
            VertexStyle -> {
             1 -> RGBColor[0.5, 0, 0.5], 0 -> RGBColor[0.5, 0, 0.5], 2 -> 
              RGBColor[0.5, 0, 0.5], 3 -> RGBColor[0.5, 0, 0.5]}}] -> Button[
           
           Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
             ImageSize -> 40, VertexSize -> {0.4}, 
             VertexStyle -> {
              1 -> GrayLevel[1], 0 -> RGBColor[0.5, 0, 0.5], 2 -> 
               GrayLevel[1], 3 -> GrayLevel[1]}}], 
           If[Part[$CellContext`digits$$, -8] == 0, 
            AddTo[FE`number$$4256, 2^7], 
            If[Part[$CellContext`digits$$, -16] == 0, 
             AddTo[FE`number$$4256, 2^15 - 2^7], 
             SubtractFrom[FE`number$$4256, 2^15 + 2^7]]], 
           ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True, 
           FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
           Alignment -> {0, -0.4}], 
         Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
           GraphLayout -> {
             "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
            ImageSize -> 40, VertexSize -> {0.4}, 
            VertexStyle -> {
             1 -> RGBColor[0.5, 0, 0.5], 0 -> RGBColor[0.5, 0, 0.5], 2 -> 
              RGBColor[0.5, 0, 0.5], 3 -> RGBColor[1, 0.5, 0]}}] -> Button[
           
           Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
             ImageSize -> 40, VertexSize -> {0.4}, 
             VertexStyle -> {
              1 -> GrayLevel[1], 0 -> RGBColor[0.5, 0, 0.5], 2 -> 
               GrayLevel[1], 3 -> GrayLevel[1]}}], 
           If[Part[$CellContext`digits$$, -7] == 0, 
            AddTo[FE`number$$4256, 2^6], 
            If[Part[$CellContext`digits$$, -15] == 0, 
             AddTo[FE`number$$4256, 2^14 - 2^6], 
             SubtractFrom[FE`number$$4256, 2^14 + 2^6]]], 
           ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True, 
           FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
           Alignment -> {0, -0.4}], 
         Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
           GraphLayout -> {
             "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
            ImageSize -> 40, VertexSize -> {0.4}, 
            VertexStyle -> {
             1 -> RGBColor[0.5, 0, 0.5], 0 -> RGBColor[0.5, 0, 0.5], 2 -> 
              RGBColor[1, 0.5, 0], 3 -> RGBColor[1, 0.5, 0]}}] -> Button[
           
           Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
             ImageSize -> 40, VertexSize -> {0.4}, 
             VertexStyle -> {
              1 -> GrayLevel[1], 0 -> RGBColor[0.5, 0, 0.5], 2 -> 
               GrayLevel[1], 3 -> GrayLevel[1]}}], 
           If[Part[$CellContext`digits$$, -6] == 0, 
            AddTo[FE`number$$4256, 2^5], 
            If[Part[$CellContext`digits$$, -14] == 0, 
             AddTo[FE`number$$4256, 2^13 - 2^5], 
             SubtractFrom[FE`number$$4256, 2^13 + 2^5]]], 
           ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True, 
           FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
           Alignment -> {0, -0.4}], 
         Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
           GraphLayout -> {
             "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
            ImageSize -> 40, VertexSize -> {0.4}, 
            VertexStyle -> {
             1 -> RGBColor[1, 0.5, 0], 0 -> RGBColor[0.5, 0, 0.5], 2 -> 
              RGBColor[1, 0.5, 0], 3 -> RGBColor[1, 0.5, 0]}}] -> Button[
           Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
             ImageSize -> 40, VertexSize -> {0.4}, 
             VertexStyle -> {
              1 -> GrayLevel[1], 0 -> RGBColor[0.5, 0, 0.5], 2 -> 
               GrayLevel[1], 3 -> GrayLevel[1]}}], 
           If[Part[$CellContext`digits$$, -5] == 0, 
            AddTo[FE`number$$4256, 2^4], 
            If[Part[$CellContext`digits$$, -13] == 0, 
             AddTo[FE`number$$4256, 2^12 - 2^4], 
             SubtractFrom[FE`number$$4256, 2^12 + 2^4]]], 
           ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True, 
           FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
           Alignment -> {0, -0.4}]}, {
        Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
           GraphLayout -> {
             "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
            ImageSize -> 40, VertexSize -> {0.4}, 
            VertexStyle -> {
             1 -> RGBColor[0.5, 0, 0.5], 0 -> RGBColor[1, 0.5, 0], 2 -> 
              RGBColor[0.5, 0, 0.5], 3 -> RGBColor[0.5, 0, 0.5]}}] -> Button[
           
           Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
             ImageSize -> 40, VertexSize -> {0.4}, 
             VertexStyle -> {
              1 -> GrayLevel[1], 0 -> RGBColor[1, 0.5, 0], 2 -> GrayLevel[1], 
               3 -> GrayLevel[1]}}], 
           If[Part[$CellContext`digits$$, -4] == 0, 
            AddTo[FE`number$$4256, 2^3], 
            If[Part[$CellContext`digits$$, -12] == 0, 
             AddTo[FE`number$$4256, 2^11 - 2^3], 
             SubtractFrom[FE`number$$4256, 2^11 + 2^3]]], 
           ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True, 
           FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
           Alignment -> {0, -0.4}], 
         Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
           GraphLayout -> {
             "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
            ImageSize -> 40, VertexSize -> {0.4}, 
            VertexStyle -> {
             1 -> RGBColor[0.5, 0, 0.5], 0 -> RGBColor[1, 0.5, 0], 2 -> 
              RGBColor[0.5, 0, 0.5], 3 -> RGBColor[1, 0.5, 0]}}] -> Button[
           
           Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
             ImageSize -> 40, VertexSize -> {0.4}, 
             VertexStyle -> {
              1 -> GrayLevel[1], 0 -> RGBColor[1, 0.5, 0], 2 -> GrayLevel[1], 
               3 -> GrayLevel[1]}}], 
           If[Part[$CellContext`digits$$, -3] == 0, 
            AddTo[FE`number$$4256, 2^2], 
            If[Part[$CellContext`digits$$, -11] == 0, 
             AddTo[FE`number$$4256, 2^10 - 2^2], 
             SubtractFrom[FE`number$$4256, 2^10 + 2^2]]], 
           ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True, 
           FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
           Alignment -> {0, -0.4}], 
         Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
           GraphLayout -> {
             "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
            ImageSize -> 40, VertexSize -> {0.4}, 
            VertexStyle -> {
             1 -> RGBColor[0.5, 0, 0.5], 0 -> RGBColor[1, 0.5, 0], 2 -> 
              RGBColor[1, 0.5, 0], 3 -> RGBColor[1, 0.5, 0]}}] -> Button[
           
           Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
             ImageSize -> 40, VertexSize -> {0.4}, 
             VertexStyle -> {
              1 -> GrayLevel[1], 0 -> RGBColor[1, 0.5, 0], 2 -> GrayLevel[1], 
               3 -> GrayLevel[1]}}], 
           If[Part[$CellContext`digits$$, -2] == 0, 
            AddTo[FE`number$$4256, 2^1], 
            If[Part[$CellContext`digits$$, -10] == 0, 
             AddTo[FE`number$$4256, 2^9 - 2^1], 
             SubtractFrom[FE`number$$4256, 2^9 + 2^1]]], 
           ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True, 
           FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
           Alignment -> {0, -0.4}], 
         Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
           GraphLayout -> {
             "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
            ImageSize -> 40, VertexSize -> {0.4}, 
            VertexStyle -> {
             1 -> RGBColor[1, 0.5, 0], 0 -> RGBColor[1, 0.5, 0], 2 -> 
              RGBColor[1, 0.5, 0], 3 -> RGBColor[1, 0.5, 0]}}] -> Button[
           
           Graph[{0, 1, 2, 3}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "RadialEmbedding"}, 
             ImageSize -> 40, VertexSize -> {0.4}, 
             VertexStyle -> {
              1 -> GrayLevel[1], 0 -> RGBColor[1, 0.5, 0], 2 -> GrayLevel[1], 
               3 -> GrayLevel[1]}}], 
           If[Part[$CellContext`digits$$, -1] == 0, 
            AddTo[FE`number$$4256, 2^0], 
            If[Part[$CellContext`digits$$, -9] == 0, 
             AddTo[FE`number$$4256, 2^8 - 2^0], 
             SubtractFrom[FE`number$$4256, 2^8 + 2^0]]], 
           ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True, 
           FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
           Alignment -> {0, -0.4}]}}, Spacings -> {1.5, 0.5}]}}, ItemSize -> 
    42]], $CellContext`color0$$ = RGBColor[1, 0.5, 0], $CellContext`color1$$ =
   RGBColor[1, 0.5, 0], $CellContext`color2$$ = RGBColor[
  1, 0.5, 0], $CellContext`color3$$ = RGBColor[
  1, 0.5, 0], $CellContext`color4$$ = RGBColor[
  0.5, 0, 0.5], $CellContext`color5$$ = RGBColor[
  0.5, 0, 0.5], $CellContext`color6$$ = RGBColor[
  0.5, 0, 0.5], $CellContext`color7$$ = RGBColor[0.5, 0, 0.5]}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`number$$ = 240, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`number$$], 240, "rule number"}, 0}}, 
     Typeset`size$$ = {600., {77., 82.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`number$$ = 240}, 
       "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       Dynamic[$CellContext`digits$$ := 
          IntegerDigits[$CellContext`number$$, 2, 16]; $CellContext`color0$$ := 
          If[Part[$CellContext`digits$$, -1] == 0, 
            RGBColor[1, 0.5, 0], 
            RGBColor[0.5, 0, 0.5]]; $CellContext`color1$$ := 
          If[Part[$CellContext`digits$$, -2] == 0, 
            RGBColor[1, 0.5, 0], 
            RGBColor[0.5, 0, 0.5]]; $CellContext`color2$$ := 
          If[Part[$CellContext`digits$$, -3] == 0, 
            RGBColor[1, 0.5, 0], 
            RGBColor[0.5, 0, 0.5]]; $CellContext`color3$$ := 
          If[Part[$CellContext`digits$$, -4] == 0, 
            RGBColor[1, 0.5, 0], 
            RGBColor[0.5, 0, 0.5]]; $CellContext`color4$$ := 
          If[Part[$CellContext`digits$$, -5] == 0, 
            RGBColor[1, 0.5, 0], 
            RGBColor[0.5, 0, 0.5]]; $CellContext`color5$$ := 
          If[Part[$CellContext`digits$$, -6] == 0, 
            RGBColor[1, 0.5, 0], 
            RGBColor[0.5, 0, 0.5]]; $CellContext`color6$$ := 
          If[Part[$CellContext`digits$$, -7] == 0, 
            RGBColor[1, 0.5, 0], 
            RGBColor[0.5, 0, 0.5]]; $CellContext`color7$$ := 
          If[Part[$CellContext`digits$$, -8] == 0, 
            RGBColor[1, 0.5, 0], 
            RGBColor[0.5, 0, 0.5]]; $CellContext`rule$$ = Framed[
            
            Grid[{{$CellContext`number$$ "=" 
               BaseForm[$CellContext`number$$, 2]}, {
               
               Grid[{{Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> RGBColor[0.5, 0, 0.5], 1 -> RGBColor[0.5, 0, 0.5], 2 -> 
                    RGBColor[0.5, 0, 0.5], 3 -> RGBColor[0.5, 0, 0.5]}] -> 
                  Button[
                    If[Part[$CellContext`digits$$, -16] == 0, 
                    
                    Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> $CellContext`color7$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 
                    Rotate[
                    
                    Graph[$CellContext`graph2$$, 
                    VertexStyle -> {
                    10 -> $CellContext`color7$$, 20 -> $CellContext`color7$$, 
                    30 -> $CellContext`color7$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 180 Degree]], 
                    If[Part[$CellContext`digits$$, -8] == 0, 
                    AddTo[$CellContext`number$$, 2^7], 
                    If[Part[$CellContext`digits$$, -16] == 0, 
                    AddTo[$CellContext`number$$, 2^15 - 2^7], 
                    SubtractFrom[$CellContext`number$$, 2^15 + 2^7]]], 
                    ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True,
                     FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
                    Alignment -> {0, -0.4}], 
                  Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> RGBColor[0.5, 0, 0.5], 1 -> RGBColor[0.5, 0, 0.5], 2 -> 
                    RGBColor[0.5, 0, 0.5], 3 -> RGBColor[1, 0.5, 0]}] -> 
                  Button[
                    If[Part[$CellContext`digits$$, -15] == 0, 
                    
                    Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> $CellContext`color6$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 
                    Rotate[
                    
                    Graph[$CellContext`graph2$$, 
                    VertexStyle -> {
                    10 -> $CellContext`color6$$, 20 -> $CellContext`color6$$, 
                    30 -> $CellContext`color6$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 180 Degree]], 
                    If[Part[$CellContext`digits$$, -7] == 0, 
                    AddTo[$CellContext`number$$, 2^6], 
                    If[Part[$CellContext`digits$$, -15] == 0, 
                    AddTo[$CellContext`number$$, 2^14 - 2^6], 
                    SubtractFrom[$CellContext`number$$, 2^14 + 2^6]]], 
                    ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True,
                     FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
                    Alignment -> {0, -0.4}], 
                  Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> RGBColor[0.5, 0, 0.5], 1 -> RGBColor[0.5, 0, 0.5], 2 -> 
                    RGBColor[1, 0.5, 0], 3 -> RGBColor[1, 0.5, 0]}] -> 
                  Button[
                    If[Part[$CellContext`digits$$, -14] == 0, 
                    
                    Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> $CellContext`color5$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 
                    Rotate[
                    
                    Graph[$CellContext`graph2$$, 
                    VertexStyle -> {
                    10 -> $CellContext`color5$$, 20 -> $CellContext`color5$$, 
                    30 -> $CellContext`color5$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 180 Degree]], 
                    If[Part[$CellContext`digits$$, -6] == 0, 
                    AddTo[$CellContext`number$$, 2^5], 
                    If[Part[$CellContext`digits$$, -14] == 0, 
                    AddTo[$CellContext`number$$, 2^13 - 2^5], 
                    SubtractFrom[$CellContext`number$$, 2^13 + 2^5]]], 
                    ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True,
                     FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
                    Alignment -> {0, -0.4}], 
                  Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> RGBColor[0.5, 0, 0.5], 1 -> RGBColor[1, 0.5, 0], 2 -> 
                    RGBColor[1, 0.5, 0], 3 -> RGBColor[1, 0.5, 0]}] -> 
                  Button[
                    If[Part[$CellContext`digits$$, -13] == 0, 
                    
                    Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> $CellContext`color4$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 
                    Rotate[
                    
                    Graph[$CellContext`graph2$$, 
                    VertexStyle -> {
                    10 -> $CellContext`color4$$, 20 -> $CellContext`color4$$, 
                    30 -> $CellContext`color4$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 180 Degree]], 
                    If[Part[$CellContext`digits$$, -5] == 0, 
                    AddTo[$CellContext`number$$, 2^4], 
                    If[Part[$CellContext`digits$$, -13] == 0, 
                    AddTo[$CellContext`number$$, 2^12 - 2^4], 
                    SubtractFrom[$CellContext`number$$, 2^12 + 2^4]]], 
                    ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True,
                     FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
                    Alignment -> {0, -0.4}]}, {
                 Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> RGBColor[1, 0.5, 0], 1 -> RGBColor[0.5, 0, 0.5], 2 -> 
                    RGBColor[0.5, 0, 0.5], 3 -> RGBColor[0.5, 0, 0.5]}] -> 
                  Button[
                    If[Part[$CellContext`digits$$, -12] == 0, 
                    
                    Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> $CellContext`color3$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 
                    Rotate[
                    
                    Graph[$CellContext`graph2$$, 
                    VertexStyle -> {
                    10 -> $CellContext`color3$$, 20 -> $CellContext`color3$$, 
                    30 -> $CellContext`color3$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 180 Degree]], 
                    If[Part[$CellContext`digits$$, -4] == 0, 
                    AddTo[$CellContext`number$$, 2^3], 
                    If[Part[$CellContext`digits$$, -12] == 0, 
                    AddTo[$CellContext`number$$, 2^11 - 2^3], 
                    SubtractFrom[$CellContext`number$$, 2^11 + 2^3]]], 
                    ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True,
                     FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
                    Alignment -> {0, -0.4}], 
                  Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> RGBColor[1, 0.5, 0], 1 -> RGBColor[0.5, 0, 0.5], 2 -> 
                    RGBColor[0.5, 0, 0.5], 3 -> RGBColor[1, 0.5, 0]}] -> 
                  Button[
                    If[Part[$CellContext`digits$$, -11] == 0, 
                    
                    Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> $CellContext`color2$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 
                    Rotate[
                    
                    Graph[$CellContext`graph2$$, 
                    VertexStyle -> {
                    10 -> $CellContext`color2$$, 20 -> $CellContext`color2$$, 
                    30 -> $CellContext`color2$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 180 Degree]], 
                    If[Part[$CellContext`digits$$, -3] == 0, 
                    AddTo[$CellContext`number$$, 2^2], 
                    If[Part[$CellContext`digits$$, -11] == 0, 
                    AddTo[$CellContext`number$$, 2^10 - 2^2], 
                    SubtractFrom[$CellContext`number$$, 2^10 + 2^2]]], 
                    ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True,
                     FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
                    Alignment -> {0, -0.4}], 
                  Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> RGBColor[1, 0.5, 0], 1 -> RGBColor[0.5, 0, 0.5], 2 -> 
                    RGBColor[1, 0.5, 0], 3 -> RGBColor[1, 0.5, 0]}] -> 
                  Button[
                    If[Part[$CellContext`digits$$, -10] == 0, 
                    
                    Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> $CellContext`color1$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 
                    Rotate[
                    
                    Graph[$CellContext`graph2$$, 
                    VertexStyle -> {
                    10 -> $CellContext`color1$$, 20 -> $CellContext`color1$$, 
                    30 -> $CellContext`color1$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 180 Degree]], 
                    If[Part[$CellContext`digits$$, -2] == 0, 
                    AddTo[$CellContext`number$$, 2^1], 
                    If[Part[$CellContext`digits$$, -10] == 0, 
                    AddTo[$CellContext`number$$, 2^9 - 2^1], 
                    SubtractFrom[$CellContext`number$$, 2^9 + 2^1]]], 
                    ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True,
                     FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
                    Alignment -> {0, -0.4}], 
                  Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> RGBColor[1, 0.5, 0], 1 -> RGBColor[1, 0.5, 0], 2 -> 
                    RGBColor[1, 0.5, 0], 3 -> RGBColor[1, 0.5, 0]}] -> 
                  Button[
                    If[Part[$CellContext`digits$$, -9] == 0, 
                    
                    Graph[$CellContext`graph1$$, 
                    VertexStyle -> {
                    0 -> $CellContext`color0$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 
                    Rotate[
                    
                    Graph[$CellContext`graph2$$, 
                    VertexStyle -> {
                    10 -> $CellContext`color0$$, 20 -> $CellContext`color0$$, 
                    30 -> $CellContext`color0$$, 1 -> GrayLevel[1], 2 -> 
                    GrayLevel[1], 3 -> GrayLevel[1]}], 180 Degree]], 
                    If[Part[$CellContext`digits$$, -1] == 0, 
                    AddTo[$CellContext`number$$, 2^0], 
                    If[Part[$CellContext`digits$$, -9] == 0, 
                    AddTo[$CellContext`number$$, 2^8 - 2^0], 
                    SubtractFrom[$CellContext`number$$, 2^8 + 2^0]]], 
                    ImageSize -> {60, 60}, FrameMargins -> 0, Enabled -> True,
                     FrameMargins -> {{60, Automatic}, {Automatic, 70}}, 
                    Alignment -> {0, -0.4}]}}, Spacings -> {1.5, 0.5}]}}, 
             ItemSize -> 42]], {$CellContext`number$$}], 
       "Specifications" :> {{{$CellContext`number$$, 240, "rule number"}, 0, 
          FieldSize -> 10}}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{644., {120., 125.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.8649622008922577`*^9, 3.864962225174225*^9}, {
   3.864962379500771*^9, 3.86496241844342*^9}, 3.8649626335868483`*^9, 
   3.864962728059202*^9, 3.864962763512747*^9, 3.864962799308601*^9, 
   3.8649629966503696`*^9, 3.8649630812342367`*^9, 3.864963112063675*^9, {
   3.864963296677865*^9, 3.8649633413740473`*^9}, {3.864963421898683*^9, 
   3.864963470313406*^9}, 3.8649635223412533`*^9, {3.864963602886765*^9, 
   3.864963635068357*^9}, {3.864963755540983*^9, 3.86496379656503*^9}, 
   3.864963828403728*^9, 3.86496388248691*^9, {3.864963952949687*^9, 
   3.8649639658975477`*^9}, 3.864964103601749*^9, 3.8649643525248003`*^9, {
   3.8649644321873207`*^9, 3.864964448320581*^9}, 3.864964479026828*^9, {
   3.864964550104137*^9, 3.864964588310913*^9}, {3.8649646947877083`*^9, 
   3.864964700973056*^9}, {3.8649647728922577`*^9, 3.8649647988697243`*^9}, {
   3.864964860129417*^9, 3.86496493444932*^9}, {3.864965081098795*^9, 
   3.8649652179437037`*^9}, 3.864965367484955*^9, {3.864965404057014*^9, 
   3.864965441894487*^9}, {3.8649654937369137`*^9, 3.864965540390945*^9}, {
   3.864965708442224*^9, 3.8649658041799297`*^9}, {3.864965868009554*^9, 
   3.864965909685343*^9}, 3.86496595537991*^9, 3.864966047368082*^9, 
   3.864966084082657*^9, 3.8649661623013773`*^9, 3.865044860888818*^9, 
   3.865046395139688*^9, 3.865046655947275*^9, 3.8650467298806343`*^9, 
   3.865047002814096*^9, 3.865052094466085*^9, 3.865053234675275*^9, 
   3.8650543548441067`*^9, 3.865054554413866*^9, 3.865423423521599*^9, 
   3.86542464399895*^9, 3.8691216079758673`*^9, {3.869121711623373*^9, 
   3.8691217213652143`*^9}, 3.8691217532944517`*^9, 3.869122123633173*^9, 
   3.869122451445471*^9, {3.869123299453055*^9, 3.8691233244292917`*^9}, {
   3.869123369652256*^9, 3.869123378712904*^9}, 3.869123431191989*^9, 
   3.8691254953171864`*^9, 3.869126591871875*^9, 3.86938186437361*^9, 
   3.869382245584865*^9, {3.8693865852249823`*^9, 3.869386592021196*^9}, 
   3.869386703811488*^9, 3.8693868277015057`*^9, 3.869387868249712*^9, 
   3.8693881680728073`*^9, 3.869388674620515*^9, 3.869388786776849*^9, 
   3.870158249452346*^9, 3.8705109232034397`*^9, {3.870668452515441*^9, 
   3.87066845380022*^9}},
 TextAlignment->Center,
 CellLabel->
  "Out[287]=",ExpressionUUID->"cd237b64-34b4-4948-ad23-7cc63dd913bf"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evolution", "Section",
 CellChangeTimes->{{3.869122136948358*^9, 3.86912213782021*^9}, {
  3.8701586395680313`*^9, 3.8701586410968637`*^9}, {3.870493727163892*^9, 
  3.87049372911884*^9}, {3.870509860703402*^9, 
  3.870509861819539*^9}},ExpressionUUID->"8b1a75de-e221-4835-9cf5-\
1f595d975ed0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "linearAlgebraToGraph", ",", " ", "graphToLinearAlgebra", ",", 
     "ruleState", ",", "ruleDivision", ",", "configurationVector", ",", 
     "newState", ",", "evolve", ",", "generateList", ",", "list", ",", "rule",
      ",", "steps", ",", "maxCalcTime", ",", "time", ",", "length", ",", 
     "d3"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", " ", "Changing"}]}]}]}]}]}]}]}], " ", "graph", " ", 
     
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"format", " ", "--"}], "--"}], "--"}], "--"}], "--"}], 
       "--"}], "--"}], "--"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "linearAlgebraToGraph", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<3D\>\"", "->", "False"}], ",", " ", 
       RowBox[{"\"\<Size\>\"", "->", "Medium"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"linearAlgebraToGraph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aM_", ",", "sV_"}], "}"}], ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"adjacencyMatrix", "=", 
          RowBox[{"Normal", "[", "aM", "]"}]}], ",", 
         RowBox[{"stateVector", "=", 
          RowBox[{"Normal", "[", "sV", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<3D\>\"", "]"}], ",", 
          RowBox[{"Graph3D", "[", 
           RowBox[{"AdjacencyGraph", "[", 
            RowBox[{"adjacencyMatrix", ",", 
             RowBox[{"VertexStyle", "\[Rule]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"i", "->", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stateVector", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "===", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                   TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"], ",", 
                   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "stateVector", "]"}], ",", "1"}], 
                 "}"}]}], "]"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"OptionValue", "[", "\"\<Size\>\"", "]"}]}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"AdjacencyGraph", "[", 
           RowBox[{"adjacencyMatrix", ",", 
            RowBox[{"VertexStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"i", "->", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"stateVector", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "===", 
                   RowBox[{"{", "1", "}"}]}], ",", 
                  TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                   "RGBColorSwatchTemplate"], ",", 
                  TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                   "RGBColorSwatchTemplate"]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "stateVector", "]"}], ",", "1"}], 
                "}"}]}], "]"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"OptionValue", "[", "\"\<Size\>\"", "]"}]}]}], "]"}]}], 
         "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"graphToLinearAlgebra", "[", "graph_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SparseArray", "[", 
        RowBox[{"AdjacencyMatrix", "[", 
         RowBox[{"IndexGraph", "[", "graph", "]"}], "]"}], "]"}], ",", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Options", "[", 
               RowBox[{
                RowBox[{"IndexGraph", "[", "graph", "]"}], ",", 
                "VertexStyle"}], "]"}], "/.", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"VertexStyle", "\[Rule]", "a_"}], "}"}], ":>", 
               "a"}]}], ",", 
             RowBox[{
              RowBox[{"#", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"a_", "->", "b_"}], ")"}], ":>", "a"}]}], "&"}]}], 
            "]"}], "/.", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"_", "->", "a_"}], ")"}], ":>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"a", "===", 
               TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                "RGBColorSwatchTemplate"]}], ",", "1", ",", "0"}], "]"}]}]}], 
          "}"}], "]"}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Evolution", " ", "--"}], "--"}], "--"}], "--"}], 
                 "--"}], "--"}], "--"}], "--"}]}]}]}]}]}]}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ruleState", "[", 
      RowBox[{"ruleNumber_", ",", "case_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"ruleNumber", ",", "2", ",", "16"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "case"}], "-", "1"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ruleDivision", "[", 
      RowBox[{"ruleNumber_", ",", "case_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"ruleNumber", ",", "2", ",", "16"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "case"}], "-", "9"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"configurationVector", "[", 
      RowBox[{"{", 
       RowBox[{"aM_", ",", "sV_"}], "}"}], "]"}], ":=", 
     RowBox[{"Normal", "[", 
      RowBox[{
       RowBox[{"4", "\[Times]", "sV"}], "+", 
       RowBox[{"aM", ".", "sV"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newState", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aM_", ",", "sV_"}], "}"}], ",", "ruleNumber_"}], "]"}], ":=",
      " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ruleState", "[", 
          RowBox[{"ruleNumber", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"configurationVector", "[", 
         RowBox[{"{", 
          RowBox[{"aM", ",", "sV"}], "}"}], "]"}]}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"evolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aM_", ",", "sV_"}], "}"}], ",", "rN_", ",", 
       RowBox[{"it_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"divisionVector", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ruleDivision", "[", 
              RowBox[{"rN", ",", "#"}], "]"}], "&"}], ",", 
            RowBox[{"configurationVector", "[", 
             RowBox[{"{", 
              RowBox[{"aM", ",", "sV"}], "}"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"adjacencyMatrix", "=", "aM"}], ",", 
         RowBox[{"stateVector", "=", 
          RowBox[{"newState", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"aM", ",", "sV"}], "}"}], ",", "rN"}], "]"}]}], ",", 
         "replicate", ",", "vertexNumber", ",", "state", ",", " ", "line", 
         ",", " ", "ones", ",", "insert", ",", "subMatrix"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "Function", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"replicate", "[", 
          RowBox[{"v_", ",", "p_", ",", "n_"}], "]"}], ":=", 
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Insert", "[", 
             RowBox[{"#", ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "p", "]"}], "]"}], ",", "p"}], "]"}], "&"}], ",", 
           "v", ",", "n"}], "]"}]}], ";", "\t", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Loop", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"FreeQ", "[", 
            RowBox[{"divisionVector", ",", "1"}], "]"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"vertexNumber", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{"divisionVector", ",", 
                RowBox[{"{", "1", "}"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Update", " ", "state", " ", "vector"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"stateVector", "=", 
            RowBox[{"replicate", "[", 
             RowBox[{"stateVector", ",", "vertexNumber", ",", "2"}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "First", " ", "division", " ", "pass", " ", "on", " ", 
             "adjacency", " ", "matrix"}], "*)"}], "\t", 
           "\[IndentingNewLine]", 
           RowBox[{"line", " ", "=", " ", 
            RowBox[{"Normal", "@", 
             RowBox[{"adjacencyMatrix", "[", 
              RowBox[{"[", "vertexNumber", "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ones", " ", "=", " ", 
            RowBox[{"Catenate", "@", 
             RowBox[{"Position", "[", 
              RowBox[{"line", ",", "1"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"adjacencyMatrix", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"adjacencyMatrix", ",", "vertexNumber"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"insert", "=", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "->", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "->", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"3", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "->", "1"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", 
                RowBox[{"Length", "[", "line", "]"}]}], "}"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"adjacencyMatrix", "=", 
              RowBox[{"Insert", "[", 
               RowBox[{"adjacencyMatrix", ",", 
                RowBox[{"insert", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "vertexNumber"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", "Transpose", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"adjacencyMatrix", "=", 
            RowBox[{"Transpose", "[", "adjacencyMatrix", "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Second", " ", "division", " ", "pass", " ", "on", " ", 
             "adjacency", " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"line", " ", "=", " ", 
            RowBox[{"Normal", "@", 
             RowBox[{"adjacencyMatrix", "[", 
              RowBox[{"[", "vertexNumber", "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ones", " ", "=", " ", 
            RowBox[{"Catenate", "@", 
             RowBox[{"Position", "[", 
              RowBox[{"line", ",", "1"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"adjacencyMatrix", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"adjacencyMatrix", ",", "vertexNumber"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"insert", "=", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "->", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "->", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"3", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "->", "1"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", 
                RowBox[{"Length", "[", "line", "]"}]}], "}"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"adjacencyMatrix", "=", 
              RowBox[{"Insert", "[", 
               RowBox[{"adjacencyMatrix", ",", 
                RowBox[{"insert", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "vertexNumber"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Adding", " ", "the", " ", "submatrix"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"adjacencyMatrix", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"vertexNumber", ";;", 
                RowBox[{"vertexNumber", "+", "2"}]}], ",", 
               RowBox[{"vertexNumber", ";;", 
                RowBox[{"vertexNumber", "+", "2"}]}]}], "]"}], "]"}], " ", 
            "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Update", " ", "division", " ", "vector"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"divisionVector", "=", 
            RowBox[{"replicate", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"divisionVector", ",", 
                RowBox[{"vertexNumber", "->", 
                 RowBox[{"{", "0", "}"}]}]}], "]"}], ",", "vertexNumber", ",",
               "2"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"adjacencyMatrix", ",", "stateVector"}], "}"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"generateList", "[", 
      RowBox[{"rl_", ",", "stps_", ",", "max_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inRule", "=", "rl"}], ",", 
         RowBox[{"inSteps", "=", "stps"}], ",", 
         RowBox[{"maxTime", "=", "max"}], ",", 
         RowBox[{"inList", "=", 
          RowBox[{"{", 
           InterpretationBox[
            DynamicModuleBox[{Typeset`open = False}, 
             TemplateBox[{"List", 
               StyleBox[
               "\"Initial graph\"", "IconizedCustomName", StripOnInput -> 
                False], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["List", "IconizedItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "10"}], "}"}], "IconizedItem"]}]}, {
                  RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["1944", "IconizedItem"]}]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               Dynamic[Typeset`open]},
              "IconizedObject"]],
            {
            SparseArray[
             Automatic, {10, 10}, 0, {
              1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{2}, {9}, {10}, {
                1}, {3}, {4}, {2}, {4}, {5}, {2}, {3}, {6}, {3}, {6}, {7}, {
                4}, {5}, {8}, {5}, {8}, {9}, {6}, {7}, {10}, {1}, {7}, {10}, {
                1}, {8}, {9}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
             Automatic, {10, 1}, 0, {
              1, {{0, 1, 1, 1, 1, 1, 2, 3, 3, 4, 5}, {{1}, {1}, {1}, {1}, {
                1}}}, {1, 1, 1, 1, 1}}]},
            SelectWithContents->True,
            Selectable->False], "}"}]}], ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TimeConstrained", "[", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "<=", "inSteps"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"inList", ",", 
              RowBox[{"evolve", "[", 
               RowBox[{
                RowBox[{"Last", "[", "inList", "]"}], ",", "inRule"}], 
               "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "maxTime"}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "inList", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Manipulate", " ", "--"}], "--"}], "--"}], "--"}],
                  "--"}], "--"}], "--"}], "--"}]}]}]}]}]}]}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"list", "=", 
        RowBox[{"generateList", "[", 
         RowBox[{"rule", ",", "steps", ",", "maxCalcTime"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"length", "=", 
        RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"steps", "=", 
        RowBox[{
         RowBox[{"Length", "[", "list", "]"}], "-", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"time", ">", "steps"}], ",", 
         RowBox[{"time", "=", "steps"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"GraphPlot", "[", 
         RowBox[{
          RowBox[{"linearAlgebraToGraph", "[", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"time", "+", "1"}], "]"}], "]"}], ",", " ", 
            RowBox[{"\"\<3D\>\"", " ", "->", " ", "d3"}]}], "]"}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"rule", ",", "2182", ",", "\"\<rule number\>\""}], 
                  "}"}], ",", "0", ",", 
                 RowBox[{"FieldSize", "->", "8"}]}], "}"}], "]"}], ",", 
              RowBox[{"Spacer", "[", "16", "]"}], ",", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "steps", ",", "40", ",", "\"\<number of steps\>\""}], "}"}],
                  ",", "1", ",", 
                 RowBox[{"FieldSize", "->", "8"}]}], "}"}], "]"}], ",", 
              RowBox[{"Spacer", "[", "16", "]"}], ",", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "maxCalcTime", ",", "1", ",", " ", 
                   "\"\<max computation time (s)\>\""}], "}"}], ",", "1", ",", 
                 RowBox[{"FieldSize", "->", "8"}]}], "}"}], "]"}], ",", 
              RowBox[{"Spacer", "[", "16", "]"}], ",", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"d3", ",", "False", ",", " ", "\"\<3D\>\""}], "}"}],
                  ",", 
                 RowBox[{"{", 
                  RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
             "}"}], "}"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{"time", ",", "0", ",", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"length", "-", "1"}], "]"}], ",", "1", ",", 
             RowBox[{"FieldSize", "->", "18"}]}], "}"}], "]"}], "}"}]}], 
        "}"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.870508534948763*^9, 3.870508828746847*^9}, {
   3.870508861337208*^9, 3.8705089328954363`*^9}, {3.870508980373809*^9, 
   3.870509103518165*^9}, {3.870509145382848*^9, 3.87050919601167*^9}, {
   3.870509226275463*^9, 3.8705092586675997`*^9}, {3.870509291858261*^9, 
   3.87050931047705*^9}, {3.870509342391827*^9, 3.870509418640276*^9}, {
   3.870509456821175*^9, 3.870509480150557*^9}, {3.870509512409349*^9, 
   3.870509541710804*^9}, {3.870509644130185*^9, 3.870509773491928*^9}, {
   3.87050981573783*^9, 3.870509829747181*^9}, 3.87066843419595*^9},
 CellLabel->
  "In[288]:=",ExpressionUUID->"84003cbe-3035-4bc0-a64c-158b387b9024"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`linearAlgebraToGraph$$, \
$CellContext`graphToLinearAlgebra$$, $CellContext`ruleState$$, \
$CellContext`ruleDivision$$, $CellContext`configurationVector$$, \
$CellContext`newState$$, $CellContext`evolve$$, $CellContext`generateList$$, \
$CellContext`list$$ = {{
   SparseArray[
    Automatic, {10, 10}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{2}, {9}, {10}, {1}, {
       3}, {4}, {2}, {4}, {5}, {2}, {3}, {6}, {3}, {6}, {7}, {4}, {5}, {8}, {
       5}, {8}, {9}, {6}, {7}, {10}, {1}, {7}, {10}, {1}, {8}, {9}}}, {1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1}}], SparseArray[
    Automatic, {10, 1}, 0, {
     1, {{0, 1, 1, 1, 1, 1, 2, 3, 3, 4, 5}, {{1}, {1}, {1}, {1}, {1}}}, {1, 1,
       1, 1, 1}}]}, {
   SparseArray[
    Automatic, {12, 12}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36}, {{2}, {11}, {12}, {
       1}, {3}, {4}, {2}, {4}, {5}, {2}, {3}, {6}, {3}, {6}, {7}, {4}, {5}, {
       10}, {5}, {9}, {11}, {9}, {10}, {12}, {8}, {10}, {7}, {8}, {9}, {6}, {
       1}, {7}, {12}, {1}, {8}, {11}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1}}], SparseArray[
    Automatic, {12, 1}, 0, {
     1, {{0, 0, 1, 1, 2, 3, 3, 3, 3, 3, 3, 4, 4}, {{1}, {1}, {1}, {1}}}, {1, 
      1, 1, 1}}]}, {
   SparseArray[
    Automatic, {14, 14}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42}, {{2}, {
       13}, {14}, {1}, {5}, {6}, {4}, {5}, {7}, {3}, {5}, {6}, {3}, {4}, {
       2}, {2}, {4}, {8}, {3}, {8}, {9}, {6}, {7}, {12}, {7}, {11}, {13}, {
       11}, {12}, {14}, {9}, {10}, {12}, {8}, {10}, {11}, {1}, {9}, {14}, {
       1}, {10}, {13}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1}}], SparseArray[
    Automatic, {14, 1}, 0, {
     1, {{0, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 4}, {{1}, {1}, {1}, {
       1}}}, {1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48}, {{
       2}, {15}, {16}, {1}, {5}, {6}, {4}, {5}, {7}, {3}, {5}, {6}, {2}, {
       3}, {4}, {2}, {4}, {8}, {3}, {8}, {9}, {6}, {7}, {12}, {7}, {11}, {
       14}, {11}, {12}, {16}, {9}, {10}, {12}, {8}, {10}, {11}, {14}, {15}, {
       16}, {13}, {15}, {9}, {13}, {14}, {1}, {1}, {10}, {13}}}, {1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
    SparseArray[
    Automatic, {16, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 6, 6, 6, 6, 6}, {{1}, {1}, {
       1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {18, 18}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54}, {{2}, {17}, {18}, {1}, {5}, {6}, {4}, {5}, {7}, {3}, {5}, {6}, {
       2}, {3}, {4}, {2}, {4}, {10}, {3}, {9}, {11}, {9}, {10}, {14}, {8}, {
       10}, {7}, {8}, {9}, {6}, {7}, {13}, {16}, {13}, {14}, {18}, {11}, {
       12}, {14}, {8}, {12}, {13}, {16}, {17}, {18}, {11}, {15}, {17}, {1}, {
       15}, {16}, {1}, {12}, {15}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {18, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6}, {{1}, {
       1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {18, 18}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54}, {{2}, {17}, {18}, {1}, {5}, {6}, {4}, {5}, {7}, {3}, {5}, {6}, {
       2}, {3}, {4}, {2}, {4}, {10}, {3}, {9}, {11}, {9}, {10}, {14}, {8}, {
       10}, {7}, {8}, {9}, {6}, {7}, {13}, {16}, {13}, {14}, {18}, {11}, {
       12}, {14}, {8}, {12}, {13}, {16}, {17}, {18}, {11}, {15}, {17}, {1}, {
       15}, {16}, {1}, {12}, {15}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {18, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 4, 5, 5, 6, 7, 8, 8}, {{1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {20, 20}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60}, {{2}, {19}, {20}, {1}, {5}, {6}, {4}, {5}, {7}, {3}, {
       5}, {6}, {2}, {3}, {4}, {2}, {4}, {10}, {3}, {9}, {13}, {9}, {10}, {
       16}, {7}, {8}, {10}, {6}, {8}, {9}, {12}, {13}, {18}, {11}, {13}, {
       15}, {11}, {12}, {7}, {15}, {16}, {20}, {12}, {14}, {16}, {8}, {14}, {
       15}, {18}, {19}, {20}, {11}, {17}, {19}, {1}, {17}, {18}, {1}, {14}, {
       17}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {20, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 4, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8}, {{
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {22, 22}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66}, {{2}, {21}, {22}, {1}, {5}, {6}, {4}, {5}, {7}, {
       3}, {5}, {6}, {2}, {3}, {4}, {2}, {4}, {12}, {3}, {11}, {15}, {9}, {
       10}, {18}, {8}, {10}, {12}, {8}, {9}, {11}, {7}, {10}, {12}, {6}, {
       9}, {11}, {14}, {15}, {20}, {13}, {15}, {17}, {7}, {13}, {14}, {17}, {
       18}, {22}, {14}, {16}, {18}, {8}, {16}, {17}, {20}, {21}, {22}, {13}, {
       19}, {21}, {1}, {19}, {20}, {1}, {16}, {19}}}, {1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {22, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5, 5, 6, 6, 7, 
       7}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {22, 22}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66}, {{2}, {21}, {22}, {1}, {5}, {6}, {4}, {5}, {7}, {
       3}, {5}, {6}, {2}, {3}, {4}, {2}, {4}, {12}, {3}, {11}, {15}, {9}, {
       10}, {18}, {8}, {10}, {12}, {8}, {9}, {11}, {7}, {10}, {12}, {6}, {
       9}, {11}, {14}, {15}, {20}, {13}, {15}, {17}, {7}, {13}, {14}, {17}, {
       18}, {22}, {14}, {16}, {18}, {8}, {16}, {17}, {20}, {21}, {22}, {13}, {
       19}, {21}, {1}, {19}, {20}, {1}, {16}, {19}}}, {1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {22, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 6, 7, 8, 8, 8, 9, 9, 10, 10, 
       11}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {26, 26}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78}, {{2}, {25}, {26}, {1}, {5}, {6}, {
       4}, {5}, {9}, {3}, {5}, {6}, {2}, {3}, {4}, {2}, {4}, {14}, {8}, {9}, {
       19}, {7}, {9}, {13}, {3}, {7}, {8}, {11}, {12}, {22}, {10}, {12}, {
       14}, {10}, {11}, {13}, {8}, {12}, {14}, {6}, {11}, {13}, {16}, {17}, {
       24}, {15}, {17}, {19}, {15}, {16}, {18}, {17}, {19}, {21}, {7}, {16}, {
       18}, {21}, {22}, {26}, {18}, {20}, {22}, {10}, {20}, {21}, {24}, {
       25}, {26}, {15}, {23}, {25}, {1}, {23}, {24}, {1}, {20}, {23}}}, {1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1}}], SparseArray[
    Automatic, {26, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 7,
        8, 8, 9, 9}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1,
       1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {28, 28}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84}, {{2}, {27}, {28}, {1}, {
       5}, {6}, {4}, {5}, {9}, {3}, {5}, {6}, {2}, {3}, {4}, {2}, {4}, {14}, {
       8}, {9}, {19}, {7}, {9}, {13}, {3}, {7}, {8}, {11}, {12}, {24}, {10}, {
       12}, {14}, {10}, {11}, {13}, {8}, {12}, {14}, {6}, {11}, {13}, {16}, {
       17}, {26}, {15}, {17}, {19}, {15}, {16}, {18}, {17}, {19}, {21}, {7}, {
       16}, {18}, {21}, {23}, {28}, {18}, {20}, {22}, {23}, {24}, {21}, {
       22}, {24}, {20}, {22}, {23}, {10}, {26}, {27}, {28}, {15}, {25}, {
       27}, {1}, {25}, {26}, {1}, {20}, {25}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1}}], SparseArray[
    Automatic, {28, 1}, 0, {
     1, {{0, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6,
        6, 6, 6, 7, 7, 8}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 
      1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {28, 28}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84}, {{2}, {27}, {28}, {1}, {
       5}, {6}, {4}, {5}, {9}, {3}, {5}, {6}, {2}, {3}, {4}, {2}, {4}, {14}, {
       8}, {9}, {19}, {7}, {9}, {13}, {3}, {7}, {8}, {11}, {12}, {24}, {10}, {
       12}, {14}, {10}, {11}, {13}, {8}, {12}, {14}, {6}, {11}, {13}, {16}, {
       17}, {26}, {15}, {17}, {19}, {15}, {16}, {18}, {17}, {19}, {21}, {7}, {
       16}, {18}, {21}, {23}, {28}, {18}, {20}, {22}, {23}, {24}, {21}, {
       22}, {24}, {20}, {22}, {23}, {10}, {26}, {27}, {28}, {15}, {25}, {
       27}, {1}, {25}, {26}, {1}, {20}, {25}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1}}], SparseArray[
    Automatic, {28, 1}, 0, {
     1, {{0, 0, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 8, 8, 9, 10, 11, 
       11, 11, 11, 12, 12, 13, 13}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {34, 34}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 
       102}, {{2}, {33}, {34}, {1}, {5}, {6}, {4}, {5}, {9}, {3}, {5}, {6}, {
       2}, {3}, {4}, {2}, {4}, {14}, {8}, {9}, {23}, {7}, {9}, {13}, {3}, {
       7}, {8}, {11}, {12}, {28}, {10}, {12}, {14}, {10}, {11}, {13}, {8}, {
       12}, {14}, {6}, {11}, {13}, {18}, {19}, {32}, {17}, {18}, {23}, {16}, {
       18}, {19}, {15}, {16}, {17}, {15}, {17}, {22}, {21}, {22}, {25}, {
       20}, {22}, {23}, {19}, {20}, {21}, {7}, {16}, {21}, {25}, {27}, {34}, {
       20}, {24}, {26}, {25}, {27}, {28}, {24}, {26}, {28}, {10}, {26}, {
       27}, {31}, {33}, {34}, {31}, {32}, {33}, {30}, {32}, {29}, {30}, {
       31}, {15}, {1}, {29}, {30}, {1}, {24}, {29}}}, {1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
    SparseArray[
    Automatic, {34, 1}, 0, {
     1, {{0, 1, 1, 1, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 9, 10, 10, 10, 10, 10, 10, 10, 11}, {{1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1}}]}, {
   SparseArray[
    Automatic, {40, 40}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120}, {{2}, {39}, {40}, {1}, {7}, {8}, {4}, {
       5}, {13}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {8}, {2}, {4}, {6}, {
       2}, {6}, {18}, {12}, {13}, {27}, {11}, {12}, {17}, {10}, {12}, {13}, {
       9}, {10}, {11}, {3}, {9}, {11}, {15}, {16}, {34}, {14}, {16}, {18}, {
       14}, {15}, {17}, {10}, {16}, {18}, {8}, {15}, {17}, {22}, {23}, {38}, {
       21}, {22}, {27}, {20}, {22}, {23}, {19}, {20}, {21}, {19}, {21}, {
       26}, {25}, {26}, {29}, {24}, {26}, {27}, {23}, {24}, {25}, {9}, {20}, {
       25}, {29}, {31}, {40}, {24}, {28}, {30}, {29}, {31}, {33}, {28}, {
       30}, {32}, {33}, {34}, {31}, {32}, {34}, {30}, {32}, {33}, {14}, {
       37}, {39}, {40}, {37}, {38}, {39}, {35}, {36}, {38}, {19}, {36}, {
       37}, {1}, {35}, {36}, {1}, {28}, {35}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {40, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 5, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9}, {{1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {40, 40}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120}, {{2}, {39}, {40}, {1}, {7}, {8}, {4}, {
       5}, {13}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {8}, {2}, {4}, {6}, {
       2}, {6}, {18}, {12}, {13}, {27}, {11}, {12}, {17}, {10}, {12}, {13}, {
       9}, {10}, {11}, {3}, {9}, {11}, {15}, {16}, {34}, {14}, {16}, {18}, {
       14}, {15}, {17}, {10}, {16}, {18}, {8}, {15}, {17}, {22}, {23}, {38}, {
       21}, {22}, {27}, {20}, {22}, {23}, {19}, {20}, {21}, {19}, {21}, {
       26}, {25}, {26}, {29}, {24}, {26}, {27}, {23}, {24}, {25}, {9}, {20}, {
       25}, {29}, {31}, {40}, {24}, {28}, {30}, {29}, {31}, {33}, {28}, {
       30}, {32}, {33}, {34}, {31}, {32}, {34}, {30}, {32}, {33}, {14}, {
       37}, {39}, {40}, {37}, {38}, {39}, {35}, {36}, {38}, {19}, {36}, {
       37}, {1}, {35}, {36}, {1}, {28}, {35}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {40, 1}, 0, {
     1, {{0, 1, 1, 1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 6, 7, 7, 8, 8, 8,
        8, 9, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 12, 13, 14, 14, 14, 
       15}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {42, 42}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126}, {{2}, {41}, {42}, {1}, {7}, {
       8}, {4}, {5}, {13}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {8}, {2}, {
       4}, {6}, {2}, {6}, {18}, {12}, {13}, {29}, {11}, {12}, {17}, {10}, {
       12}, {13}, {9}, {10}, {11}, {3}, {9}, {11}, {15}, {16}, {36}, {14}, {
       16}, {18}, {14}, {15}, {17}, {10}, {16}, {18}, {8}, {15}, {17}, {22}, {
       23}, {40}, {21}, {22}, {28}, {20}, {22}, {23}, {19}, {20}, {21}, {
       19}, {21}, {26}, {25}, {26}, {31}, {24}, {26}, {27}, {23}, {24}, {
       25}, {28}, {29}, {25}, {27}, {29}, {20}, {27}, {28}, {9}, {31}, {33}, {
       42}, {24}, {30}, {32}, {31}, {33}, {35}, {30}, {32}, {34}, {33}, {
       35}, {36}, {32}, {34}, {36}, {14}, {34}, {35}, {39}, {41}, {42}, {
       39}, {40}, {41}, {37}, {38}, {40}, {19}, {38}, {39}, {1}, {37}, {38}, {
       1}, {30}, {37}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {42, 1}, 0, {
     1, {{0, 0, 1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 6, 7, 7, 8, 9, 9, 9, 9, 9, 10, 
       11, 11, 11, 11, 12, 12, 12, 12, 13, 14, 14, 14, 15, 16, 17, 18, 18, 18,
        19, 20, 20}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {48, 48}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 
       144}, {{2}, {47}, {48}, {1}, {9}, {10}, {4}, {5}, {17}, {3}, {5}, {
       7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {8}, {7}, {9}, {10}, {2}, {
       6}, {8}, {2}, {8}, {24}, {16}, {17}, {35}, {15}, {16}, {23}, {14}, {
       15}, {17}, {13}, {15}, {16}, {12}, {13}, {14}, {11}, {12}, {14}, {3}, {
       11}, {13}, {19}, {20}, {42}, {18}, {20}, {22}, {18}, {19}, {21}, {
       20}, {22}, {24}, {19}, {21}, {23}, {12}, {22}, {24}, {10}, {21}, {
       23}, {28}, {29}, {46}, {27}, {28}, {34}, {26}, {28}, {29}, {25}, {
       26}, {27}, {25}, {27}, {32}, {31}, {32}, {37}, {30}, {32}, {33}, {
       29}, {30}, {31}, {31}, {34}, {35}, {26}, {33}, {35}, {11}, {33}, {
       34}, {37}, {39}, {48}, {30}, {36}, {38}, {37}, {39}, {41}, {36}, {
       38}, {40}, {39}, {41}, {42}, {38}, {40}, {42}, {18}, {40}, {41}, {
       45}, {47}, {48}, {45}, {46}, {47}, {43}, {44}, {46}, {25}, {44}, {
       45}, {1}, {43}, {44}, {1}, {36}, {43}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {48, 1}, 0, {
     1, {{0, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        5, 6, 7, 8, 8, 8, 9, 10, 11, 11, 11, 11, 11, 11, 11, 12, 13, 13, 13, 
       13, 13, 14, 15, 15, 15, 16}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {52, 52}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156}, {{2}, {51}, {52}, {1}, {9}, {10}, {4}, {5}, {
       17}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {8}, {7}, {
       9}, {10}, {2}, {6}, {8}, {2}, {8}, {24}, {16}, {17}, {37}, {15}, {
       16}, {23}, {14}, {15}, {17}, {13}, {15}, {16}, {12}, {13}, {14}, {
       11}, {12}, {14}, {3}, {11}, {13}, {19}, {20}, {44}, {18}, {20}, {22}, {
       18}, {19}, {21}, {20}, {22}, {24}, {19}, {21}, {23}, {12}, {22}, {
       24}, {10}, {21}, {23}, {28}, {29}, {50}, {27}, {28}, {36}, {26}, {
       28}, {29}, {25}, {26}, {27}, {25}, {27}, {34}, {31}, {33}, {39}, {
       30}, {32}, {35}, {31}, {33}, {34}, {30}, {32}, {34}, {29}, {32}, {
       33}, {31}, {36}, {37}, {26}, {35}, {37}, {11}, {35}, {36}, {39}, {
       41}, {52}, {30}, {38}, {40}, {39}, {41}, {43}, {38}, {40}, {42}, {
       41}, {43}, {44}, {40}, {42}, {44}, {18}, {42}, {43}, {47}, {51}, {
       52}, {47}, {49}, {51}, {45}, {46}, {48}, {49}, {50}, {47}, {48}, {
       50}, {46}, {48}, {49}, {25}, {1}, {45}, {46}, {1}, {38}, {45}}}, {1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {52, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 6, 7, 7, 7, 7, 8, 9,
        9, 9, 9, 9, 10, 11, 11, 11, 11, 11, 11, 11, 12, 13, 14, 15, 16, 16, 
       16, 17, 18, 18, 19, 19, 19, 19, 19, 19, 20, 20}, {{1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1}}]}, {SparseArray[
    Automatic, {56, 56}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168}, {{2}, {55}, {56}, {1}, {9}, {
       10}, {4}, {5}, {19}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {
       4}, {6}, {8}, {7}, {9}, {10}, {2}, {6}, {8}, {2}, {8}, {26}, {12}, {
       13}, {41}, {11}, {13}, {19}, {11}, {12}, {18}, {17}, {18}, {25}, {
       16}, {17}, {19}, {15}, {17}, {18}, {14}, {15}, {16}, {13}, {14}, {
       16}, {3}, {12}, {15}, {21}, {22}, {48}, {20}, {22}, {24}, {20}, {21}, {
       23}, {22}, {24}, {26}, {21}, {23}, {25}, {14}, {24}, {26}, {10}, {
       23}, {25}, {32}, {33}, {54}, {29}, {30}, {40}, {28}, {30}, {32}, {
       28}, {29}, {31}, {30}, {32}, {33}, {27}, {29}, {31}, {27}, {31}, {
       38}, {35}, {37}, {43}, {34}, {36}, {39}, {35}, {37}, {38}, {34}, {
       36}, {38}, {33}, {36}, {37}, {35}, {40}, {41}, {28}, {39}, {41}, {
       11}, {39}, {40}, {43}, {45}, {56}, {34}, {42}, {44}, {43}, {45}, {
       47}, {42}, {44}, {46}, {45}, {47}, {48}, {44}, {46}, {48}, {20}, {
       46}, {47}, {51}, {55}, {56}, {51}, {53}, {55}, {49}, {50}, {52}, {
       51}, {53}, {54}, {50}, {52}, {54}, {27}, {52}, {53}, {1}, {49}, {50}, {
       1}, {42}, {49}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {56, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 5, 6, 6, 6, 6, 6, 6, 7, 8, 9, 9, 9, 9, 10, 
       11, 11, 11, 12, 13, 14, 14, 14, 14, 14, 14, 15, 16, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 18, 19, 19, 19, 20, 20, 21, 22, 22, 22, 22, 22, 
       23}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {58, 58}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168, 171, 174}, {{2}, {57}, {58}, {
       1}, {9}, {10}, {4}, {5}, {19}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {
       7}, {9}, {4}, {6}, {8}, {7}, {9}, {10}, {2}, {6}, {8}, {2}, {8}, {
       28}, {12}, {13}, {43}, {11}, {13}, {19}, {11}, {12}, {18}, {17}, {
       18}, {27}, {16}, {17}, {19}, {15}, {17}, {18}, {14}, {15}, {16}, {
       13}, {14}, {16}, {3}, {12}, {15}, {21}, {22}, {50}, {20}, {22}, {24}, {
       20}, {21}, {23}, {22}, {24}, {26}, {21}, {23}, {25}, {24}, {26}, {
       28}, {23}, {25}, {27}, {14}, {26}, {28}, {10}, {25}, {27}, {34}, {
       35}, {56}, {31}, {32}, {42}, {30}, {32}, {34}, {30}, {31}, {33}, {
       32}, {34}, {35}, {29}, {31}, {33}, {29}, {33}, {40}, {37}, {39}, {
       45}, {36}, {38}, {41}, {37}, {39}, {40}, {36}, {38}, {40}, {35}, {
       38}, {39}, {37}, {42}, {43}, {30}, {41}, {43}, {11}, {41}, {42}, {
       45}, {47}, {58}, {36}, {44}, {46}, {45}, {47}, {49}, {44}, {46}, {
       48}, {47}, {49}, {50}, {46}, {48}, {50}, {20}, {48}, {49}, {53}, {
       57}, {58}, {53}, {55}, {57}, {51}, {52}, {54}, {53}, {55}, {56}, {
       52}, {54}, {56}, {29}, {54}, {55}, {1}, {51}, {52}, {1}, {44}, {
       51}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {58, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 7, 7, 7, 7,
        7, 7, 8, 9, 9, 9, 9, 9, 9, 9, 10, 11, 11, 11, 11, 12, 13, 14, 15, 15, 
       15, 16, 17, 17, 17, 18, 19, 19, 20, 20, 20, 21, 22, 23, 24, 24}, {{
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {58, 58}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168, 171, 174}, {{2}, {57}, {58}, {
       1}, {9}, {10}, {4}, {5}, {19}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {
       7}, {9}, {4}, {6}, {8}, {7}, {9}, {10}, {2}, {6}, {8}, {2}, {8}, {
       28}, {12}, {13}, {43}, {11}, {13}, {19}, {11}, {12}, {18}, {17}, {
       18}, {27}, {16}, {17}, {19}, {15}, {17}, {18}, {14}, {15}, {16}, {
       13}, {14}, {16}, {3}, {12}, {15}, {21}, {22}, {50}, {20}, {22}, {24}, {
       20}, {21}, {23}, {22}, {24}, {26}, {21}, {23}, {25}, {24}, {26}, {
       28}, {23}, {25}, {27}, {14}, {26}, {28}, {10}, {25}, {27}, {34}, {
       35}, {56}, {31}, {32}, {42}, {30}, {32}, {34}, {30}, {31}, {33}, {
       32}, {34}, {35}, {29}, {31}, {33}, {29}, {33}, {40}, {37}, {39}, {
       45}, {36}, {38}, {41}, {37}, {39}, {40}, {36}, {38}, {40}, {35}, {
       38}, {39}, {37}, {42}, {43}, {30}, {41}, {43}, {11}, {41}, {42}, {
       45}, {47}, {58}, {36}, {44}, {46}, {45}, {47}, {49}, {44}, {46}, {
       48}, {47}, {49}, {50}, {46}, {48}, {50}, {20}, {48}, {49}, {53}, {
       57}, {58}, {53}, {55}, {57}, {51}, {52}, {54}, {53}, {55}, {56}, {
       52}, {54}, {56}, {29}, {54}, {55}, {1}, {51}, {52}, {1}, {44}, {
       51}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {58, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 10, 11, 11, 11, 11, 
       11, 11, 12, 13, 13, 13, 14, 15, 16, 16, 17, 18, 18, 18, 19, 20, 21, 21,
        21, 21, 21, 22, 23, 23, 23, 24, 25, 25, 25, 26, 26, 27, 28, 28, 28, 
       28, 28, 29}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {66, 66}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 
       189, 192, 195, 198}, {{2}, {65}, {66}, {1}, {9}, {10}, {4}, {5}, {
       23}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {8}, {7}, {
       9}, {10}, {2}, {6}, {8}, {2}, {8}, {32}, {12}, {13}, {51}, {11}, {
       13}, {15}, {11}, {12}, {14}, {13}, {15}, {22}, {12}, {14}, {20}, {
       19}, {20}, {31}, {18}, {19}, {21}, {17}, {19}, {20}, {16}, {17}, {
       18}, {15}, {16}, {18}, {17}, {22}, {23}, {14}, {21}, {23}, {3}, {21}, {
       22}, {25}, {26}, {58}, {24}, {26}, {28}, {24}, {25}, {27}, {26}, {
       28}, {30}, {25}, {27}, {29}, {28}, {30}, {32}, {27}, {29}, {31}, {
       16}, {30}, {32}, {10}, {29}, {31}, {40}, {41}, {64}, {35}, {36}, {
       50}, {34}, {36}, {38}, {34}, {35}, {37}, {36}, {38}, {40}, {35}, {
       37}, {39}, {38}, {40}, {41}, {33}, {37}, {39}, {33}, {39}, {46}, {
       43}, {45}, {53}, {42}, {44}, {49}, {43}, {45}, {46}, {42}, {44}, {
       46}, {41}, {44}, {45}, {48}, {49}, {51}, {47}, {49}, {50}, {47}, {
       48}, {43}, {34}, {48}, {51}, {11}, {47}, {50}, {53}, {55}, {66}, {
       42}, {52}, {54}, {53}, {55}, {57}, {52}, {54}, {56}, {55}, {57}, {
       58}, {54}, {56}, {58}, {24}, {56}, {57}, {61}, {65}, {66}, {61}, {
       63}, {65}, {59}, {60}, {62}, {61}, {63}, {64}, {60}, {62}, {64}, {
       33}, {62}, {63}, {1}, {59}, {60}, {1}, {52}, {59}}}, {1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1}}], SparseArray[
    Automatic, {66, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6,
        6, 7, 8, 9, 9, 9, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 13, 13, 
       13, 13, 14, 15, 16, 16, 16, 16, 16, 16, 17, 18, 18, 18, 19, 20, 20, 21,
        21, 21, 22, 23, 24, 25, 25}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {68, 68}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 
       189, 192, 195, 198, 201, 204}, {{2}, {67}, {68}, {1}, {9}, {10}, {4}, {
       5}, {23}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {8}, {
       7}, {9}, {10}, {2}, {6}, {8}, {2}, {8}, {32}, {12}, {13}, {51}, {11}, {
       13}, {15}, {11}, {12}, {14}, {13}, {15}, {22}, {12}, {14}, {20}, {
       19}, {20}, {31}, {18}, {19}, {21}, {17}, {19}, {20}, {16}, {17}, {
       18}, {15}, {16}, {18}, {17}, {22}, {23}, {14}, {21}, {23}, {3}, {21}, {
       22}, {25}, {26}, {60}, {24}, {26}, {28}, {24}, {25}, {27}, {26}, {
       28}, {30}, {25}, {27}, {29}, {28}, {30}, {32}, {27}, {29}, {31}, {
       16}, {30}, {32}, {10}, {29}, {31}, {40}, {41}, {66}, {35}, {36}, {
       50}, {34}, {36}, {38}, {34}, {35}, {37}, {36}, {38}, {40}, {35}, {
       37}, {39}, {38}, {40}, {41}, {33}, {37}, {39}, {33}, {39}, {46}, {
       43}, {45}, {53}, {42}, {44}, {49}, {43}, {45}, {46}, {42}, {44}, {
       46}, {41}, {44}, {45}, {48}, {49}, {51}, {47}, {49}, {50}, {43}, {
       47}, {48}, {34}, {48}, {51}, {11}, {47}, {50}, {53}, {55}, {68}, {
       42}, {52}, {54}, {53}, {55}, {57}, {52}, {54}, {56}, {55}, {57}, {
       59}, {54}, {56}, {58}, {59}, {60}, {57}, {58}, {60}, {56}, {58}, {
       59}, {24}, {63}, {67}, {68}, {63}, {65}, {67}, {61}, {62}, {64}, {
       63}, {65}, {66}, {62}, {64}, {66}, {33}, {64}, {65}, {1}, {61}, {62}, {
       1}, {52}, {61}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {68, 1}, 0, {
     1, {{0, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 9, 10, 10, 10, 11, 12, 13, 13, 13, 13, 14, 15, 15, 15, 16,
        17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 20, 20, 20, 20, 
       20, 20, 20, 21, 22, 22, 22, 22, 22, 23}, {{1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {68, 68}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 
       189, 192, 195, 198, 201, 204}, {{2}, {67}, {68}, {1}, {9}, {10}, {4}, {
       5}, {23}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {8}, {
       7}, {9}, {10}, {2}, {6}, {8}, {2}, {8}, {32}, {12}, {13}, {51}, {11}, {
       13}, {15}, {11}, {12}, {14}, {13}, {15}, {22}, {12}, {14}, {20}, {
       19}, {20}, {31}, {18}, {19}, {21}, {17}, {19}, {20}, {16}, {17}, {
       18}, {15}, {16}, {18}, {17}, {22}, {23}, {14}, {21}, {23}, {3}, {21}, {
       22}, {25}, {26}, {60}, {24}, {26}, {28}, {24}, {25}, {27}, {26}, {
       28}, {30}, {25}, {27}, {29}, {28}, {30}, {32}, {27}, {29}, {31}, {
       16}, {30}, {32}, {10}, {29}, {31}, {40}, {41}, {66}, {35}, {36}, {
       50}, {34}, {36}, {38}, {34}, {35}, {37}, {36}, {38}, {40}, {35}, {
       37}, {39}, {38}, {40}, {41}, {33}, {37}, {39}, {33}, {39}, {46}, {
       43}, {45}, {53}, {42}, {44}, {49}, {43}, {45}, {46}, {42}, {44}, {
       46}, {41}, {44}, {45}, {48}, {49}, {51}, {47}, {49}, {50}, {43}, {
       47}, {48}, {34}, {48}, {51}, {11}, {47}, {50}, {53}, {55}, {68}, {
       42}, {52}, {54}, {53}, {55}, {57}, {52}, {54}, {56}, {55}, {57}, {
       59}, {54}, {56}, {58}, {59}, {60}, {57}, {58}, {60}, {56}, {58}, {
       59}, {24}, {63}, {67}, {68}, {63}, {65}, {67}, {61}, {62}, {64}, {
       63}, {65}, {66}, {62}, {64}, {66}, {33}, {64}, {65}, {1}, {61}, {62}, {
       1}, {52}, {61}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {68, 1}, 0, {
     1, {{0, 0, 1, 2, 2, 2, 3, 4, 4, 4, 5, 5, 6, 6, 7, 7, 8, 9, 9, 9, 10, 10, 
       10, 10, 10, 11, 12, 12, 12, 13, 14, 14, 14, 14, 14, 15, 16, 16, 16, 17,
        18, 18, 18, 18, 19, 20, 21, 21, 21, 22, 22, 22, 23, 24, 24, 24, 25, 
       26, 26, 26, 26, 27, 27, 27, 28, 29, 30, 31, 31}, {{1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {70, 70}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 
       189, 192, 195, 198, 201, 204, 207, 210}, {{2}, {69}, {70}, {1}, {9}, {
       10}, {4}, {5}, {25}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {
       4}, {6}, {8}, {7}, {9}, {10}, {2}, {6}, {8}, {2}, {8}, {34}, {12}, {
       13}, {53}, {11}, {13}, {17}, {11}, {12}, {14}, {13}, {16}, {24}, {
       16}, {17}, {22}, {15}, {17}, {14}, {15}, {16}, {12}, {21}, {22}, {
       33}, {20}, {21}, {23}, {19}, {21}, {22}, {18}, {19}, {20}, {15}, {
       18}, {20}, {19}, {24}, {25}, {14}, {23}, {25}, {3}, {23}, {24}, {27}, {
       28}, {62}, {26}, {28}, {30}, {26}, {27}, {29}, {28}, {30}, {32}, {
       27}, {29}, {31}, {30}, {32}, {34}, {29}, {31}, {33}, {18}, {32}, {
       34}, {10}, {31}, {33}, {42}, {43}, {68}, {37}, {38}, {52}, {36}, {
       38}, {40}, {36}, {37}, {39}, {38}, {40}, {42}, {37}, {39}, {41}, {
       40}, {42}, {43}, {35}, {39}, {41}, {35}, {41}, {48}, {45}, {47}, {
       55}, {44}, {46}, {51}, {45}, {47}, {48}, {44}, {46}, {48}, {43}, {
       46}, {47}, {50}, {51}, {53}, {49}, {51}, {52}, {45}, {49}, {50}, {
       36}, {50}, {53}, {11}, {49}, {52}, {55}, {57}, {70}, {44}, {54}, {
       56}, {55}, {57}, {59}, {54}, {56}, {58}, {57}, {59}, {61}, {56}, {
       58}, {60}, {59}, {61}, {62}, {58}, {60}, {62}, {26}, {60}, {61}, {
       65}, {69}, {70}, {65}, {67}, {69}, {63}, {64}, {66}, {65}, {67}, {
       68}, {64}, {66}, {68}, {35}, {66}, {67}, {1}, {63}, {64}, {1}, {54}, {
       63}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
    SparseArray[
    Automatic, {70, 1}, 0, {
     1, {{0, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 9, 9,
        10, 11, 12, 13, 13, 13, 14, 15, 15, 15, 16, 17, 18, 19, 19, 19, 20, 
       21, 21, 21, 22, 23, 24, 24, 24, 24, 25, 26, 26, 26, 26, 26, 26, 27, 28,
        28, 28, 29, 30, 30, 30, 31, 32, 32, 32, 32, 32, 33}, {{1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {78, 78}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 
       189, 192, 195, 198, 201, 204, 207, 210, 213, 216, 219, 222, 225, 228, 
       231, 234}, {{2}, {77}, {78}, {1}, {11}, {12}, {4}, {5}, {29}, {3}, {
       5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {8}, {7}, {9}, {11}, {
       6}, {8}, {10}, {9}, {11}, {12}, {2}, {8}, {10}, {2}, {10}, {38}, {
       14}, {15}, {59}, {13}, {15}, {19}, {13}, {14}, {16}, {15}, {18}, {
       28}, {18}, {19}, {26}, {16}, {17}, {19}, {14}, {17}, {18}, {25}, {
       26}, {37}, {22}, {23}, {27}, {21}, {23}, {25}, {21}, {22}, {24}, {
       23}, {25}, {26}, {20}, {22}, {24}, {17}, {20}, {24}, {21}, {28}, {
       29}, {16}, {27}, {29}, {3}, {27}, {28}, {31}, {32}, {70}, {30}, {32}, {
       34}, {30}, {31}, {33}, {32}, {34}, {36}, {31}, {33}, {35}, {34}, {
       36}, {38}, {33}, {35}, {37}, {20}, {36}, {38}, {12}, {35}, {37}, {
       46}, {47}, {76}, {41}, {42}, {58}, {40}, {42}, {44}, {40}, {41}, {
       43}, {42}, {44}, {46}, {41}, {43}, {45}, {44}, {46}, {47}, {39}, {
       43}, {45}, {39}, {45}, {52}, {49}, {51}, {61}, {48}, {50}, {57}, {
       49}, {51}, {52}, {48}, {50}, {52}, {47}, {50}, {51}, {54}, {56}, {
       59}, {53}, {55}, {58}, {54}, {56}, {57}, {53}, {55}, {57}, {49}, {
       55}, {56}, {40}, {54}, {59}, {13}, {53}, {58}, {61}, {63}, {78}, {
       48}, {60}, {62}, {61}, {63}, {65}, {60}, {62}, {64}, {63}, {65}, {
       67}, {62}, {64}, {66}, {65}, {67}, {69}, {64}, {66}, {68}, {69}, {
       70}, {67}, {68}, {70}, {66}, {68}, {69}, {30}, {73}, {77}, {78}, {
       73}, {75}, {77}, {71}, {72}, {74}, {73}, {75}, {76}, {72}, {74}, {
       76}, {39}, {74}, {75}, {1}, {71}, {72}, {1}, {60}, {71}}}, {1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {78, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7,
        7, 7, 7, 8, 8, 8, 8, 8, 9, 10, 10, 10, 11, 12, 12, 12, 12, 12, 13, 14,
        14, 14, 15, 16, 16, 16, 16, 17, 18, 19, 19, 19, 19, 19, 19, 20, 21, 
       22, 23, 23, 23, 24, 25, 25, 25, 25, 25, 25, 26, 26, 26, 27, 28, 29, 30,
        30}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {80, 80}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 
       189, 192, 195, 198, 201, 204, 207, 210, 213, 216, 219, 222, 225, 228, 
       231, 234, 237, 240}, {{2}, {79}, {80}, {1}, {11}, {12}, {4}, {5}, {
       29}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {8}, {7}, {
       9}, {11}, {6}, {8}, {10}, {9}, {11}, {12}, {2}, {8}, {10}, {2}, {10}, {
       38}, {14}, {15}, {61}, {13}, {15}, {19}, {13}, {14}, {16}, {15}, {
       18}, {28}, {18}, {19}, {26}, {16}, {17}, {19}, {14}, {17}, {18}, {
       25}, {26}, {37}, {22}, {23}, {27}, {21}, {23}, {25}, {21}, {22}, {
       24}, {23}, {25}, {26}, {20}, {22}, {24}, {17}, {20}, {24}, {21}, {
       28}, {29}, {16}, {27}, {29}, {3}, {27}, {28}, {31}, {32}, {72}, {30}, {
       32}, {34}, {30}, {31}, {33}, {32}, {34}, {36}, {31}, {33}, {35}, {
       34}, {36}, {38}, {33}, {35}, {37}, {20}, {36}, {38}, {12}, {35}, {
       37}, {48}, {49}, {78}, {41}, {42}, {60}, {40}, {42}, {44}, {40}, {
       41}, {43}, {42}, {44}, {46}, {41}, {43}, {45}, {44}, {46}, {48}, {
       43}, {45}, {47}, {46}, {48}, {49}, {39}, {45}, {47}, {39}, {47}, {
       54}, {51}, {53}, {63}, {50}, {52}, {59}, {51}, {53}, {54}, {50}, {
       52}, {54}, {49}, {52}, {53}, {56}, {58}, {61}, {55}, {57}, {60}, {
       56}, {58}, {59}, {55}, {57}, {59}, {51}, {57}, {58}, {40}, {56}, {
       61}, {13}, {55}, {60}, {63}, {65}, {80}, {50}, {62}, {64}, {63}, {
       65}, {67}, {62}, {64}, {66}, {65}, {67}, {69}, {64}, {66}, {68}, {
       67}, {69}, {71}, {66}, {68}, {70}, {69}, {71}, {72}, {68}, {70}, {
       72}, {30}, {70}, {71}, {75}, {79}, {80}, {75}, {77}, {79}, {73}, {
       74}, {76}, {75}, {77}, {78}, {74}, {76}, {78}, {39}, {76}, {77}, {1}, {
       73}, {74}, {1}, {62}, {73}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {80, 1}, 0, {
     1, {{0, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 10, 10,
        10, 10, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 16, 16, 16, 17, 18, 
       19, 19, 19, 19, 19, 19, 20, 21, 21, 21, 22, 23, 24, 24, 24, 24, 25, 26,
        26, 26, 26, 26, 26, 26, 26, 27, 28, 28, 28, 29, 30, 30, 30, 30, 30, 
       31, 32, 32, 32, 32, 32, 33}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1}}]}, {
   SparseArray[
    Automatic, {84, 84}, 0, {
     1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 
       54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 
       105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 
       147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 
       189, 192, 195, 198, 201, 204, 207, 210, 213, 216, 219, 222, 225, 228, 
       231, 234, 237, 240, 243, 246, 249, 252}, {{2}, {83}, {84}, {1}, {11}, {
       12}, {4}, {5}, {33}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {
       4}, {6}, {8}, {7}, {9}, {11}, {6}, {8}, {10}, {9}, {11}, {12}, {2}, {
       8}, {10}, {2}, {10}, {42}, {16}, {17}, {65}, {15}, {16}, {23}, {14}, {
       16}, {17}, {13}, {14}, {15}, {13}, {15}, {20}, {19}, {20}, {32}, {
       18}, {20}, {22}, {18}, {19}, {17}, {22}, {23}, {30}, {19}, {21}, {
       23}, {14}, {21}, {22}, {29}, {30}, {41}, {26}, {27}, {31}, {25}, {
       27}, {29}, {25}, {26}, {28}, {27}, {29}, {30}, {24}, {26}, {28}, {
       21}, {24}, {28}, {25}, {32}, {33}, {18}, {31}, {33}, {3}, {31}, {32}, {
       35}, {36}, {76}, {34}, {36}, {38}, {34}, {35}, {37}, {36}, {38}, {
       40}, {35}, {37}, {39}, {38}, {40}, {42}, {37}, {39}, {41}, {24}, {
       40}, {42}, {12}, {39}, {41}, {52}, {53}, {82}, {45}, {46}, {64}, {
       44}, {46}, {48}, {44}, {45}, {47}, {46}, {48}, {50}, {45}, {47}, {
       49}, {48}, {50}, {52}, {47}, {49}, {51}, {50}, {52}, {53}, {43}, {
       49}, {51}, {43}, {51}, {58}, {55}, {57}, {67}, {54}, {56}, {63}, {
       55}, {57}, {58}, {54}, {56}, {58}, {53}, {56}, {57}, {60}, {62}, {
       65}, {59}, {61}, {64}, {60}, {62}, {63}, {59}, {61}, {63}, {55}, {
       61}, {62}, {44}, {60}, {65}, {13}, {59}, {64}, {67}, {69}, {84}, {
       54}, {66}, {68}, {67}, {69}, {71}, {66}, {68}, {70}, {69}, {71}, {
       73}, {68}, {70}, {72}, {71}, {73}, {75}, {70}, {72}, {74}, {73}, {
       75}, {76}, {72}, {74}, {76}, {34}, {74}, {75}, {79}, {83}, {84}, {
       79}, {81}, {83}, {77}, {78}, {80}, {79}, {81}, {82}, {78}, {80}, {
       82}, {43}, {80}, {81}, {1}, {77}, {78}, {1}, {66}, {77}}}, {1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {84, 1}, 0, {
     1, {{0, 0, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
        6, 7, 7, 8, 9, 9, 9, 10, 11, 11, 12, 12, 13, 14, 14, 14, 15, 16, 16, 
       16, 16, 16, 16, 16, 17, 18, 18, 18, 19, 20, 20, 20, 20, 21, 22, 23, 23,
        23, 24, 25, 26, 27, 28, 29, 30, 30, 30, 31, 32, 32, 32, 33, 34, 35, 
       36, 36, 36, 37, 38, 39, 40, 40}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1}}]}, {SparseArray[Automatic, {90, 90}, 0, {1, {CompressedData["
1:eJwl0IFGQwEAQNHXspSmiIiIR0RExBgRI2JEibFEihGzERERMSIiYkREjBEx
IiJiRMSIERERETEiRtRhl/MDN1wrLOY7giBYDtp10kUPMfoZYJAhhhkhZJQx
xplgkiniJJhmhiSzzJFingWWSJNhhVXWybJBjgKbbLHNDrvsUWSfAw454pgS
J5xyxjllKlxwSZUrrrnhljtq3PPAI3WeaPDMC6+88c4Hn3zR5JsfWvzyR8Tg
KN300sc/xS8tEQ==
       "], {{2}, {89}, {90}, {1}, {13}, {14}, {4}, {5}, {
       37}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {8}, {7}, {
       9}, {11}, {6}, {8}, {10}, {9}, {11}, {13}, {8}, {10}, {12}, {11}, {
       13}, {14}, {2}, {10}, {12}, {2}, {12}, {48}, {18}, {19}, {71}, {17}, {
       18}, {25}, {16}, {18}, {19}, {15}, {16}, {17}, {15}, {17}, {22}, {
       21}, {22}, {36}, {20}, {22}, {24}, {19}, {20}, {21}, {24}, {25}, {
       34}, {21}, {23}, {25}, {16}, {23}, {24}, {33}, {34}, {47}, {28}, {
       29}, {35}, {27}, {29}, {31}, {27}, {28}, {30}, {29}, {31}, {33}, {
       28}, {30}, {32}, {31}, {33}, {34}, {26}, {30}, {32}, {23}, {26}, {
       32}, {27}, {36}, {37}, {20}, {35}, {37}, {3}, {35}, {36}, {39}, {40}, {
       82}, {38}, {40}, {42}, {38}, {39}, {41}, {40}, {42}, {44}, {39}, {
       41}, {43}, {42}, {44}, {46}, {41}, {43}, {45}, {44}, {46}, {48}, {
       43}, {45}, {47}, {26}, {46}, {48}, {14}, {45}, {47}, {58}, {59}, {
       88}, {51}, {52}, {70}, {50}, {52}, {54}, {50}, {51}, {53}, {52}, {
       54}, {56}, {51}, {53}, {55}, {54}, {56}, {58}, {53}, {55}, {57}, {
       56}, {58}, {59}, {49}, {55}, {57}, {49}, {57}, {64}, {61}, {63}, {
       73}, {60}, {62}, {69}, {61}, {63}, {64}, {60}, {62}, {64}, {59}, {
       62}, {63}, {66}, {68}, {71}, {65}, {67}, {70}, {66}, {68}, {69}, {
       65}, {67}, {69}, {61}, {67}, {68}, {50}, {66}, {71}, {15}, {65}, {
       70}, {73}, {75}, {90}, {60}, {72}, {74}, {73}, {75}, {77}, {72}, {
       74}, {76}, {75}, {77}, {79}, {74}, {76}, {78}, {77}, {79}, {81}, {
       76}, {78}, {80}, {79}, {81}, {82}, {78}, {80}, {82}, {38}, {80}, {
       81}, {85}, {89}, {90}, {85}, {87}, {89}, {83}, {84}, {86}, {85}, {
       87}, {88}, {84}, {86}, {88}, {49}, {86}, {87}, {1}, {83}, {84}, {1}, {
       72}, {83}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {90, 1}, 0, {
     1, {{0, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11,
        12, 12, 12, 13, 14, 15, 16, 17, 18, 18, 18, 19, 20, 20, 20, 21, 22, 
       23, 23, 23, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 26, 27, 27, 27, 28,
        29, 29, 29, 29, 29, 30, 31, 31, 31, 31, 31, 32}, {{1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[Automatic, {90, 90}, 0, {1, {CompressedData["
1:eJwl0IFGQwEAQNHXspSmiIiIR0RExBgRI2JEibFEihGzERERMSIiYkREjBEx
IiJiRMSIERERETEiRtRhl/MDN1wrLOY7giBYDtp10kUPMfoZYJAhhhkhZJQx
xplgkiniJJhmhiSzzJFingWWSJNhhVXWybJBjgKbbLHNDrvsUWSfAw454pgS
J5xyxjllKlxwSZUrrrnhljtq3PPAI3WeaPDMC6+88c4Hn3zR5JsfWvzyR8Tg
KN300sc/xS8tEQ==
       "], {{2}, {89}, {90}, {1}, {13}, {14}, {4}, {5}, {
       37}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {8}, {7}, {
       9}, {11}, {6}, {8}, {10}, {9}, {11}, {13}, {8}, {10}, {12}, {11}, {
       13}, {14}, {2}, {10}, {12}, {2}, {12}, {48}, {18}, {19}, {71}, {17}, {
       18}, {25}, {16}, {18}, {19}, {15}, {16}, {17}, {15}, {17}, {22}, {
       21}, {22}, {36}, {20}, {22}, {24}, {19}, {20}, {21}, {24}, {25}, {
       34}, {21}, {23}, {25}, {16}, {23}, {24}, {33}, {34}, {47}, {28}, {
       29}, {35}, {27}, {29}, {31}, {27}, {28}, {30}, {29}, {31}, {33}, {
       28}, {30}, {32}, {31}, {33}, {34}, {26}, {30}, {32}, {23}, {26}, {
       32}, {27}, {36}, {37}, {20}, {35}, {37}, {3}, {35}, {36}, {39}, {40}, {
       82}, {38}, {40}, {42}, {38}, {39}, {41}, {40}, {42}, {44}, {39}, {
       41}, {43}, {42}, {44}, {46}, {41}, {43}, {45}, {44}, {46}, {48}, {
       43}, {45}, {47}, {26}, {46}, {48}, {14}, {45}, {47}, {58}, {59}, {
       88}, {51}, {52}, {70}, {50}, {52}, {54}, {50}, {51}, {53}, {52}, {
       54}, {56}, {51}, {53}, {55}, {54}, {56}, {58}, {53}, {55}, {57}, {
       56}, {58}, {59}, {49}, {55}, {57}, {49}, {57}, {64}, {61}, {63}, {
       73}, {60}, {62}, {69}, {61}, {63}, {64}, {60}, {62}, {64}, {59}, {
       62}, {63}, {66}, {68}, {71}, {65}, {67}, {70}, {66}, {68}, {69}, {
       65}, {67}, {69}, {61}, {67}, {68}, {50}, {66}, {71}, {15}, {65}, {
       70}, {73}, {75}, {90}, {60}, {72}, {74}, {73}, {75}, {77}, {72}, {
       74}, {76}, {75}, {77}, {79}, {74}, {76}, {78}, {77}, {79}, {81}, {
       76}, {78}, {80}, {79}, {81}, {82}, {78}, {80}, {82}, {38}, {80}, {
       81}, {85}, {89}, {90}, {85}, {87}, {89}, {83}, {84}, {86}, {85}, {
       87}, {88}, {84}, {86}, {88}, {49}, {86}, {87}, {1}, {83}, {84}, {1}, {
       72}, {83}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
    Automatic, {90, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 8, 9, 9, 9,
        9, 10, 11, 12, 12, 12, 12, 13, 14, 14, 14, 15, 16, 16, 17, 17, 17, 17,
        18, 19, 19, 19, 20, 21, 21, 21, 21, 21, 21, 21, 22, 23, 23, 23, 24, 
       25, 25, 25, 25, 26, 27, 28, 28, 28, 29, 30, 31, 32, 33, 34, 35, 35, 35,
        36, 37, 37, 37, 38, 39, 39, 40, 40, 40, 41, 42, 43, 44, 44}, {{1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1}}]}, {SparseArray[Automatic, {96, 96}, 0, {1, {CompressedData["
1:eJwl0I1GgwEAQNGvUpZSmqUspRERESNGjDFGjM0YEf0QkUZERERExBgRERER
ERERERERERERERExYkQdupwXuLGZUn6xLgiC6eC/BppoppV2wnTSTQ99xBhg
kCGGGSHOKAnGSJIiTYZxsuQoUGSCSaaYZY55FiixxDIrrLLGOhtsssU2ZSrs
sMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyRdVvqnxwy/1
BjcSooU2OojQRZRe+vkDD8gtsA==
       "], {{2}, {95}, {96}, {1}, {13}, {14}, {
       4}, {5}, {43}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {4}, {6}, {
       8}, {7}, {9}, {11}, {6}, {8}, {10}, {9}, {11}, {13}, {8}, {10}, {12}, {
       11}, {13}, {14}, {2}, {10}, {12}, {2}, {12}, {54}, {16}, {17}, {77}, {
       15}, {17}, {21}, {15}, {16}, {20}, {19}, {20}, {29}, {18}, {20}, {
       21}, {17}, {18}, {19}, {16}, {19}, {24}, {23}, {24}, {42}, {22}, {
       24}, {28}, {21}, {22}, {23}, {26}, {27}, {38}, {25}, {27}, {29}, {
       25}, {26}, {28}, {23}, {27}, {29}, {18}, {26}, {28}, {37}, {38}, {
       53}, {32}, {33}, {39}, {31}, {33}, {35}, {31}, {32}, {34}, {33}, {
       35}, {37}, {32}, {34}, {36}, {35}, {37}, {38}, {30}, {34}, {36}, {
       25}, {30}, {36}, {31}, {41}, {43}, {41}, {42}, {43}, {40}, {42}, {
       39}, {40}, {41}, {22}, {3}, {39}, {40}, {45}, {46}, {88}, {44}, {46}, {
       48}, {44}, {45}, {47}, {46}, {48}, {50}, {45}, {47}, {49}, {48}, {
       50}, {52}, {47}, {49}, {51}, {50}, {52}, {54}, {49}, {51}, {53}, {
       30}, {52}, {54}, {14}, {51}, {53}, {64}, {65}, {94}, {57}, {58}, {
       76}, {56}, {58}, {60}, {56}, {57}, {59}, {58}, {60}, {62}, {57}, {
       59}, {61}, {60}, {62}, {64}, {59}, {61}, {63}, {62}, {64}, {65}, {
       55}, {61}, {63}, {55}, {63}, {70}, {67}, {69}, {79}, {66}, {68}, {
       75}, {67}, {69}, {70}, {66}, {68}, {70}, {65}, {68}, {69}, {72}, {
       74}, {77}, {71}, {73}, {76}, {72}, {74}, {75}, {71}, {73}, {75}, {
       67}, {73}, {74}, {56}, {72}, {77}, {15}, {71}, {76}, {79}, {81}, {
       96}, {66}, {78}, {80}, {79}, {81}, {83}, {78}, {80}, {82}, {81}, {
       83}, {85}, {80}, {82}, {84}, {83}, {85}, {87}, {82}, {84}, {86}, {
       85}, {87}, {88}, {84}, {86}, {88}, {44}, {86}, {87}, {91}, {95}, {
       96}, {91}, {93}, {95}, {89}, {90}, {92}, {91}, {93}, {94}, {90}, {
       92}, {94}, {55}, {92}, {93}, {1}, {89}, {90}, {1}, {78}, {89}}}, {1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
    SparseArray[
    Automatic, {96, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7, 8, 8, 8, 8, 8, 9, 10, 10, 10,
        10, 11, 12, 12, 12, 12, 12, 12, 12, 13, 14, 15, 15, 15, 16, 17, 17, 
       17, 17, 17, 17, 17, 17, 18, 19, 19, 19, 20, 21, 21, 21, 22, 23, 24, 25,
        26, 27, 27, 27, 28, 29, 29, 29, 30, 31, 32, 32, 32, 32, 33, 34, 34, 
       34, 34, 34, 34, 34, 34, 35, 36, 36, 36, 37, 38, 38, 38, 39, 39, 40, 41,
        41, 41, 41, 41, 42}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1}}]}, {SparseArray[Automatic, {98, 98}, 0, {1, {CompressedData["

1:eJwt0FFEgwEAhdG/0pRSSmma0pQiIkZERIyIaCJGpIhII0ZExIiIESMiIkZE
RMSIiIiIiIgRIyJGRKxDXc779UUXU4m1qiAIloK/1RCinkaaaaWdMBG6idLH
AIMMMUyMEUYZY5wJ4kwyxTQzzDJHknkW/n8ss8IqKdZJs8EmW2yTYYdd9siy
T44DDjnimBPynHLGORdcckWBa2645Y57HnjkiWdeeKXIGyXe+eCTMl9880OF
aoFrqaOBJlpoo4NOuuihl35+AYIxLf0=
       "], {{2}, {97}, {98}, {1}, {13}, {
       14}, {4}, {5}, {43}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {
       4}, {6}, {8}, {7}, {9}, {11}, {6}, {8}, {10}, {9}, {11}, {13}, {8}, {
       10}, {12}, {11}, {13}, {14}, {2}, {10}, {12}, {2}, {12}, {56}, {16}, {
       17}, {79}, {15}, {17}, {21}, {15}, {16}, {20}, {19}, {20}, {29}, {
       18}, {20}, {21}, {17}, {18}, {19}, {16}, {19}, {24}, {23}, {24}, {
       42}, {22}, {24}, {28}, {21}, {22}, {23}, {26}, {27}, {38}, {25}, {
       27}, {29}, {25}, {26}, {28}, {23}, {27}, {29}, {18}, {26}, {28}, {
       37}, {38}, {55}, {32}, {33}, {39}, {31}, {33}, {35}, {31}, {32}, {
       34}, {33}, {35}, {37}, {32}, {34}, {36}, {35}, {37}, {38}, {30}, {
       34}, {36}, {25}, {30}, {36}, {31}, {41}, {43}, {41}, {42}, {43}, {
       39}, {40}, {42}, {22}, {40}, {41}, {3}, {39}, {40}, {45}, {46}, {90}, {
       44}, {46}, {48}, {44}, {45}, {47}, {46}, {48}, {50}, {45}, {47}, {
       49}, {48}, {50}, {52}, {47}, {49}, {51}, {50}, {52}, {54}, {49}, {
       51}, {53}, {52}, {54}, {56}, {51}, {53}, {55}, {30}, {54}, {56}, {
       14}, {53}, {55}, {66}, {67}, {96}, {59}, {60}, {78}, {58}, {60}, {
       62}, {58}, {59}, {61}, {60}, {62}, {64}, {59}, {61}, {63}, {62}, {
       64}, {66}, {61}, {63}, {65}, {64}, {66}, {67}, {57}, {63}, {65}, {
       57}, {65}, {72}, {69}, {71}, {81}, {68}, {70}, {77}, {69}, {71}, {
       72}, {68}, {70}, {72}, {67}, {70}, {71}, {74}, {76}, {79}, {73}, {
       75}, {78}, {74}, {76}, {77}, {73}, {75}, {77}, {69}, {75}, {76}, {
       58}, {74}, {79}, {15}, {73}, {78}, {81}, {83}, {98}, {68}, {80}, {
       82}, {81}, {83}, {85}, {80}, {82}, {84}, {83}, {85}, {87}, {82}, {
       84}, {86}, {85}, {87}, {89}, {84}, {86}, {88}, {87}, {89}, {90}, {
       86}, {88}, {90}, {44}, {88}, {89}, {93}, {97}, {98}, {93}, {95}, {
       97}, {91}, {92}, {94}, {93}, {95}, {96}, {92}, {94}, {96}, {57}, {
       94}, {95}, {1}, {91}, {92}, {1}, {80}, {91}}}, {1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
    SparseArray[
    Automatic, {98, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 8, 9,
        9, 9, 9, 9, 9, 10, 11, 12, 12, 12, 12, 13, 14, 14, 14, 15, 16, 16, 16,
        16, 17, 17, 17, 17, 17, 17, 18, 19, 19, 19, 20, 21, 21, 21, 21, 21, 
       21, 21, 22, 23, 23, 23, 24, 25, 25, 25, 25, 26, 27, 28, 28, 28, 29, 30,
        31, 32, 33, 34, 35, 35, 35, 36, 37, 37, 37, 38, 39, 39, 40, 40, 40, 
       41, 42, 43, 44, 44}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[Automatic, {98, 98}, 0, {1, {CompressedData["
1:eJwt0FFEgwEAhdG/0pRSSmma0pQiIkZERIyIaCJGpIhII0ZExIiIESMiIkZE
RMSIiIiIiIgRIyJGRKxDXc779UUXU4m1qiAIloK/1RCinkaaaaWdMBG6idLH
AIMMMUyMEUYZY5wJ4kwyxTQzzDJHknkW/n8ss8IqKdZJs8EmW2yTYYdd9siy
T44DDjnimBPynHLGORdcckWBa2645Y57HnjkiWdeeKXIGyXe+eCTMl9880OF
aoFrqaOBJlpoo4NOuuihl35+AYIxLf0=
       "], {{2}, {97}, {98}, {1}, {13}, {
       14}, {4}, {5}, {43}, {3}, {5}, {7}, {3}, {4}, {6}, {5}, {7}, {9}, {
       4}, {6}, {8}, {7}, {9}, {11}, {6}, {8}, {10}, {9}, {11}, {13}, {8}, {
       10}, {12}, {11}, {13}, {14}, {2}, {10}, {12}, {2}, {12}, {56}, {16}, {
       17}, {79}, {15}, {17}, {21}, {15}, {16}, {20}, {19}, {20}, {29}, {
       18}, {20}, {21}, {17}, {18}, {19}, {16}, {19}, {24}, {23}, {24}, {
       42}, {22}, {24}, {28}, {21}, {22}, {23}, {26}, {27}, {38}, {25}, {
       27}, {29}, {25}, {26}, {28}, {23}, {27}, {29}, {18}, {26}, {28}, {
       37}, {38}, {55}, {32}, {33}, {39}, {31}, {33}, {35}, {31}, {32}, {
       34}, {33}, {35}, {37}, {32}, {34}, {36}, {35}, {37}, {38}, {30}, {
       34}, {36}, {25}, {30}, {36}, {31}, {41}, {43}, {41}, {42}, {43}, {
       39}, {40}, {42}, {22}, {40}, {41}, {3}, {39}, {40}, {45}, {46}, {90}, {
       44}, {46}, {48}, {44}, {45}, {47}, {46}, {48}, {50}, {45}, {47}, {
       49}, {48}, {50}, {52}, {47}, {49}, {51}, {50}, {52}, {54}, {49}, {
       51}, {53}, {52}, {54}, {56}, {51}, {53}, {55}, {30}, {54}, {56}, {
       14}, {53}, {55}, {66}, {67}, {96}, {59}, {60}, {78}, {58}, {60}, {
       62}, {58}, {59}, {61}, {60}, {62}, {64}, {59}, {61}, {63}, {62}, {
       64}, {66}, {61}, {63}, {65}, {64}, {66}, {67}, {57}, {63}, {65}, {
       57}, {65}, {72}, {69}, {71}, {81}, {68}, {70}, {77}, {69}, {71}, {
       72}, {68}, {70}, {72}, {67}, {70}, {71}, {74}, {76}, {79}, {73}, {
       75}, {78}, {74}, {76}, {77}, {73}, {75}, {77}, {69}, {75}, {76}, {
       58}, {74}, {79}, {15}, {73}, {78}, {81}, {83}, {98}, {68}, {80}, {
       82}, {81}, {83}, {85}, {80}, {82}, {84}, {83}, {85}, {87}, {82}, {
       84}, {86}, {85}, {87}, {89}, {84}, {86}, {88}, {87}, {89}, {90}, {
       86}, {88}, {90}, {44}, {88}, {89}, {93}, {97}, {98}, {93}, {95}, {
       97}, {91}, {92}, {94}, {93}, {95}, {96}, {92}, {94}, {96}, {57}, {
       94}, {95}, {1}, {91}, {92}, {1}, {80}, {91}}}, {1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
    SparseArray[
    Automatic, {98, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 10, 11, 12, 13, 13, 
       13, 13, 14, 15, 16, 17, 18, 18, 18, 18, 19, 20, 21, 21, 21, 22, 23, 23,
        23, 24, 25, 26, 26, 26, 26, 26, 27, 28, 28, 28, 29, 30, 30, 30, 31, 
       32, 33, 34, 35, 36, 36, 36, 37, 38, 38, 38, 39, 40, 41, 41, 41, 41, 42,
        43, 43, 43, 43, 43, 43, 43, 43, 44, 45, 45, 45, 46, 47, 47, 47, 48, 
       48, 49, 50, 50, 50, 50, 50, 51}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[Automatic, {104, 104}, 0, {1, {CompressedData["
1:eJwt0FFEgwEAhdG/UppSSllKaZZSmlJKESMiYpSIiCki0oiIiIiIiBEREREj
IiIiIkZExIiIiIiIiKhDXc779UWmU2MLeUEQzAV/K6CIEKWUU0k1NdTRQIQm
WmgjRifd9NLPAHEGGWKYERKMMs4Ek0yRZIbZ/z/zpFhkiWVWWGWNdTbYZItt
0uywyx77HHDIERmOOeGUM8654JIrrslywy133JPjgUeeeOaFV95454NPvvjm
h3yBCymmhDIqqCJMLfU0EqWZVtrpoIse+vgF63svLA==
       "], CompressedData["
1:eJwNwle7gQAAANAGsit707Cyd0aIsmf2JsKb//927/kOIf8kGQIAgAUB4D8A
fb6gyaxS52A1Aqs0akSn0mgRnUGj1esMJq3eaDCZIb0RMjYxfIPibhRzWO2U
xeay2h0WmwO32V3ugNXpxpwury/r8QU8Xr8vQDq9/hCRDBJUMET6CcoSIhNJ
LhJNhaPxcCQWjSciMSaeSNIxJkgz4Uwuk82l0llPOgOn0oXiPV8s5wulYpkt
lCpltlaqVNlao1Kt1xrNap2jG01znRsM33xn3e4Ibb7bEXp8VxR6g67Y7w2G
LbHf6s/G091oshpPZ6PJbDiZLqTNfLleSKv5cjVeSu3FBp2vd4fvaLvfHU7b
/fFwuuyP59PldjxfL7f7+XrPX2/Pz/epfB7y66m85de79VLAhwxuH39dy0Hf

       "]}, CompressedData["
1:eJxTTMoPSmJkYGCwABKMo4AsAAAbyQMZ
      "]}], SparseArray[
    Automatic, {104, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6,
        6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 8, 9, 9, 9, 9, 10, 11, 11, 11, 12,
        13, 13, 13, 13, 14, 15, 16, 17, 17, 17, 18, 19, 19, 19, 20, 21, 21, 
       21, 21, 21, 21, 21, 22, 23, 23, 23, 24, 25, 25, 25, 25, 26, 27, 28, 28,
        28, 29, 30, 31, 32, 33, 34, 35, 35, 35, 36, 37, 37, 37, 38, 39, 39, 
       40, 40, 40, 41, 42, 43, 44, 44}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[Automatic, {106, 106}, 0, {1, {CompressedData["
1:eJwl0IFGQwEAQNFXKaUspZTSNKWUppRSShEjIpqIiBSR0oiIiIiIiIiIMSJG
RETEiIiIiIiIiIiIiKhDl/MDNzKdiC9mBUEwH/yXQx4FFFFMKeVUUk2YCPU0
0kyUNjroooc+BhgkxhDDjDDKGONMMMkUM8wyxwIJllhmhVXWWGeDTbbYZodd
9tjngCQpDjkizTEnnHLGORdkuOSKa2645Y57HnjkiWdeeOWNdz745Itvfvgl
2+Bc8ikkRAllVFBFDbXU0UATLbTSTifd9NLPH2szL6k=
       "], CompressedData["
1:eJwNxdWSggAAAEBCsUVsxUKxMLBbDFDswG7FxJf7/7dzZmeWEP8EEQIAgAEB
4AeApC+o08vkaViugGWIXKGSIUqFSoMo1SqNTqnWanR6SK2FtIwBW6GYAzVY
TZaA0Ww3WaxGsxUzW+wOj8nmMNjsuCvldHmcuNvl8dtwt4+Ie4mA1+d3EwGj
zx+L10PhRDAcDYYi4WgsFKGisTgZobwkFaTTdCqdSKacSRpOJLM5MZMrZLL5
XKGUzRcLpUq+WC5VasVytVJjytU6WWP01Xqv/2m1l80212yxba7bYjtct8d2
+G6v3+jwDX4yHG8Go8VwPBmMJv3ReCaspvPlTFhM54vhXGjOVuh0udl9B+vt
ZndYb/e7w2m7Px5Ol/3xfLrcjufrTbxcxV+Zp/R9vqX74/V8fx6vT+P1Bu8P
cH3/BwiHRF4=
       "]}, CompressedData["
1:eJxTTMoPSmJkYGCwAxKMo4ACAAA2AAMl
      "]}], SparseArray[
    Automatic, {106, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9, 9, 10, 10, 10, 
       10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 12, 13, 14, 14, 14, 14, 15, 16,
        17, 17, 17, 18, 19, 19, 19, 20, 21, 21, 21, 21, 21, 21, 22, 23, 23, 
       23, 24, 25, 25, 25, 26, 27, 28, 29, 30, 31, 31, 31, 32, 33, 33, 33, 34,
        35, 36, 36, 36, 36, 37, 38, 38, 38, 38, 38, 38, 38, 38, 39, 40, 40, 
       40, 41, 42, 42, 42, 42, 42, 42, 42, 43, 44, 44, 44, 44, 44, 45}, {{
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1}}]}, {SparseArray[Automatic, {106, 106}, 0, {1, {CompressedData["
1:eJwl0IFGQwEAQNFXKaUspZTSNKWUppRSShEjIpqIiBSR0oiIiIiIiIiIMSJG
RETEiIiIiIiIiIiIiKhDl/MDNzKdiC9mBUEwH/yXQx4FFFFMKeVUUk2YCPU0
0kyUNjroooc+BhgkxhDDjDDKGONMMMkUM8wyxwIJllhmhVXWWGeDTbbYZodd
9tjngCQpDjkizTEnnHLGORdkuOSKa2645Y57HnjkiWdeeOWNdz745Itvfvgl
2+Bc8ikkRAllVFBFDbXU0UATLbTSTifd9NLPH2szL6k=
       "], CompressedData["
1:eJwNxdWSggAAAEBCsUVsxUKxMLBbDFDswG7FxJf7/7dzZmeWEP8EEQIAgAEB
4AeApC+o08vkaViugGWIXKGSIUqFSoMo1SqNTqnWanR6SK2FtIwBW6GYAzVY
TZaA0Ww3WaxGsxUzW+wOj8nmMNjsuCvldHmcuNvl8dtwt4+Ie4mA1+d3EwGj
zx+L10PhRDAcDYYi4WgsFKGisTgZobwkFaTTdCqdSKacSRpOJLM5MZMrZLL5
XKGUzRcLpUq+WC5VasVytVJjytU6WWP01Xqv/2m1l80212yxba7bYjtct8d2
+G6v3+jwDX4yHG8Go8VwPBmMJv3ReCaspvPlTFhM54vhXGjOVuh0udl9B+vt
ZndYb/e7w2m7Px5Ol/3xfLrcjufrTbxcxV+Zp/R9vqX74/V8fx6vT+P1Bu8P
cH3/BwiHRF4=
       "]}, CompressedData["
1:eJxTTMoPSmJkYGCwAxKMo4ACAAA2AAMl
      "]}], SparseArray[
    Automatic, {106, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 7, 8, 8, 9, 9, 10, 
       10, 10, 10, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 14, 15, 15, 15, 15,
        16, 17, 17, 17, 18, 19, 19, 19, 20, 21, 21, 22, 23, 23, 23, 24, 25, 
       25, 25, 26, 27, 27, 27, 27, 27, 27, 27, 28, 29, 29, 29, 30, 31, 31, 31,
        31, 32, 33, 34, 34, 34, 35, 36, 37, 38, 39, 40, 41, 41, 41, 42, 43, 
       43, 43, 44, 45, 45, 45, 45, 46, 46, 46, 47, 48, 49, 50, 50}, {{1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[Automatic, {112, 112}, 0, {1, {CompressedData["
1:eJwl0IFGQwEAQNFXKaWU0pRSmlJKWUoppZRSSqlERKQRkaaIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiKhDl/MDNzwRG5qJC4JgNvgvgSRSSCODLELkkk8hYUoo
o4IqqqmlnkaaaaWdTrrppZ9BhhlhlDHGiTLJFNPEmGOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvnimx9+
iTc4kWRSSSeTbHLIo4AiiimlnEoi1FBHA0200EYHXfTQxwB/BUwxaA==
       
       "], CompressedData["
1:eJwNwlWWggAAAEDAbuwODLC7EwMVE7FbsRPv/7U7bxCGpRkIAAAKBID/AMT+
QJmcy8tweAIOl88TiLh8oUAk4QvFIolMKJZKZHJILIWkDVi5VijVClilVFth
lUmr82l0Ro1WrzNY9EaT1mBSG4wWq1tvtqrMFrsjbXO4bXaX0+VFXG7E6TDb
nSgW92A+D+pFMJ8G9cbi9WAoEQhFAsFwKBILhqORWNwfjnr80UAqk0pnEsm0
LZniJJK5/D2bL2ZzhXyxnCuUimW8UKqU8VqpUsVrjUq17q815NX6YPhttVfN
dqfZItudXovsdnoDstvvDYZEt0/0J6PxlqKXo/GEoidDejxbrKfz1WyxnM6X
o/miOVsrpqvt/kdtdtv9cbM77I+n3YE5ni4H5ny63Jjz9XK7n6/37PX2Yn+v
D/t4vl+f7/P9Jd4f8PEEN48/ctZMIw==
       "]}, CompressedData["
1:eJxTTMoPSmJkYGAIABKMo4CqAACHLQNJ
      "]}], SparseArray[
    Automatic, {112, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 9, 9, 10, 11, 12, 13, 14, 15, 15, 15, 15, 15, 15, 16, 17, 18, 18, 
       18, 18, 19, 20, 21, 21, 21, 22, 23, 23, 23, 24, 25, 25, 25, 26, 26, 26,
        27, 28, 28, 28, 29, 30, 30, 30, 31, 32, 33, 34, 35, 36, 36, 36, 37, 
       38, 38, 38, 39, 40, 41, 41, 41, 41, 42, 43, 43, 43, 43, 43, 43, 43, 43,
        44, 45, 45, 45, 46, 47, 47, 47, 48, 49, 49, 49, 50, 51, 51, 51, 51, 
       51, 52}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1}}]}, {SparseArray[Automatic, {116, 116}, 0, {1, {CompressedData["
1:eJwt0FtERQEARcFTKaWUUkoppZRSSimllFJKKb2UUqSISJeIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiKihNvO/rZzxUO9MWBAEc8HfIogihjgSSCKFNDLIIoc8
CiiihDIqqKKGOhpoooU2Ouiih34GGWaUMSaYZIppQsz+/5tngUWWWGaFVdZY
Z4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT774
5odwgSOJJpZ4EkkmlXQyySaXfAopppRyKqmmlnoaaaaVdjrppo8BhhjhFzDt
Ms4=
       "], CompressedData["
1:eJwNxYMSwgAAANBt2TaXbWvZXK6lZS79/9Xdu3swTqA4BAAABgLAHwB9viCH
S6bESRQaiUyl0BhkKp3GYFHpTAaLQ2eyWRwuxGRD7DJfsOAJRDy+UCDS8IVK
idQulirEEplUrpYplBK5UiRXqDUmmUojVKl1+phWb9LqjAajDTaa9LBBpTNY
rAGz1W622GCrXWyx+QMllzvodHudLo/b63d5fF5/wOHxmR0+ZzgejsaDoUg4
GgtFYtpIlBQMJVO3RCqTSKZTmWwyjWSy+TSSy+aLSK6QL5ZzhZKjWOYWSt3e
u1bHqvVmtdaoN9u1RqvZ7jZanXa3V2l1Kp1Rf7hCB/P+cIQORr3BcDJbjKfY
ZDYfT+f96aw6WfDG2GrzRZfr1Wa7XOOb7X6N77b7I7477I/n3eF0PF8Pp8v1
dr7c/iWIz5d4fe6PJ/F6P57vyvMF3h/g8v4DXmBRjQ==
       "]}, CompressedData["
1:eJxTTMoPSmJkYGCIARKMo4BmAAC/ZwNh
      "]}], SparseArray[
    Automatic, {116, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 8, 8, 8, 8,
        9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 
       14, 15, 15, 15, 15, 16, 17, 17, 17, 18, 19, 19, 19, 19, 19, 19, 20, 20,
        21, 22, 22, 22, 23, 24, 24, 24, 25, 26, 26, 26, 26, 26, 26, 26, 27, 
       28, 28, 28, 29, 30, 30, 30, 30, 31, 32, 33, 33, 33, 34, 35, 36, 37, 38,
        39, 40, 40, 40, 41, 42, 42, 42, 43, 44, 44, 44, 44, 44, 44, 45, 45, 
       45, 46, 47, 48, 49, 49}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1}}]}, {SparseArray[Automatic, {116, 116}, 0, {1, {CompressedData["
1:eJwt0FtERQEARcFTKaWUUkoppZRSSimllFJKKb2UUqSISJeIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiKihNvO/rZzxUO9MWBAEc8HfIogihjgSSCKFNDLIIoc8
CiiihDIqqKKGOhpoooU2Ouiih34GGWaUMSaYZIppQsz+/5tngUWWWGaFVdZY
Z4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT774
5odwgSOJJpZ4EkkmlXQyySaXfAopppRyKqmmlnoaaaaVdjrppo8BhhjhFzDt
Ms4=
       "], CompressedData["
1:eJwNxYMSwgAAANBt2TaXbWvZXK6lZS79/9Xdu3swTqA4BAAABgLAHwB9viCH
S6bESRQaiUyl0BhkKp3GYFHpTAaLQ2eyWRwuxGRD7DJfsOAJRDy+UCDS8IVK
idQulirEEplUrpYplBK5UiRXqDUmmUojVKl1+phWb9LqjAajDTaa9LBBpTNY
rAGz1W622GCrXWyx+QMllzvodHudLo/b63d5fF5/wOHxmR0+ZzgejsaDoUg4
GgtFYtpIlBQMJVO3RCqTSKZTmWwyjWSy+TSSy+aLSK6QL5ZzhZKjWOYWSt3e
u1bHqvVmtdaoN9u1RqvZ7jZanXa3V2l1Kp1Rf7hCB/P+cIQORr3BcDJbjKfY
ZDYfT+f96aw6WfDG2GrzRZfr1Wa7XOOb7X6N77b7I7477I/n3eF0PF8Pp8v1
dr7c/iWIz5d4fe6PJ/F6P57vyvMF3h/g8v4DXmBRjQ==
       "]}, CompressedData["
1:eJxTTMoPSmJkYGCIARKMo4BmAAC/ZwNh
      "]}], SparseArray[
    Automatic, {116, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 10, 11, 11, 11, 12, 
       13, 14, 14, 15, 15, 16, 17, 18, 19, 20, 21, 21, 22, 23, 24, 24, 25, 26,
        27, 27, 27, 27, 28, 29, 30, 30, 30, 31, 32, 32, 32, 33, 34, 34, 34, 
       34, 34, 35, 35, 35, 36, 37, 37, 37, 38, 39, 39, 39, 40, 41, 42, 43, 44,
        45, 45, 45, 46, 47, 47, 47, 48, 49, 50, 50, 50, 50, 51, 52, 52, 52, 
       52, 52, 52, 52, 52, 53, 54, 54, 54, 55, 56, 56, 56, 57, 58, 58, 58, 58,
        58, 59, 60, 60, 60, 60, 60, 61}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[Automatic, {124, 124}, 0, {1, {CompressedData["
1:eJwl0Q1HngEAheGnpZSylFJKWUppSlNKKaWUUkpfmlLKO6VsepUiUowRERER
ERERERERETFGRERERERERIx1ZYfrD5w7OxTumogIgmA++L9IooklngSSSCGN
DLLIJpd8PlPEF0opp5JqaqmnkWZaaaeTHr7SzyDDfGOUcX4QZooZZpljgZ/8
YpEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM37zh3MuuOSKa2645Y57Hnjk
iWdeeOUv//jg4ChiiOMjiSSTSjqZfCKHPAoopJgSyqigihrqaKCJFtrooJte
+hhgiBAjjPGd9+CTTPMG1K82Kg==
       "], CompressedData["
1:eJwNwgNyAwEAAMCLbdu2bdv2xbbz+HZnJeCxCkIBALhBAOA/AP3+IAQiHBGB
IVAwOBKBwsCRaBQGh0RjMTgCGovHEYhQLB6KL5IpcxKFRiJTKTQJmSpkMC10
poDO4LA5YhaHy2Sx2XwhXyDk8gQMHp/G5YklepZIQhWJZcqwVKFTKDUyuVIq
V6g1ZpVGK1epdXq1Vi/T6kRGk9dgshiMZpXJQjeaPd6C3eGzOVw2u9Ph8tid
bpfHa3W6DVa3LRAJhCI+fzAQCvuDYWkwBPP5Y/FbNJ6MxhLxZDqWSCXT2UQq
k87mU5lcNl/M5ArWfJGYK7Q7n0p1Vq7Wy5Vatd6s1Br1ZrvWaDXbnVKjVWoN
e4Nltz/tDYbd/rDTH4zB+WgyG4PT0WTam4Dl8Zw0mi3Xv+5itVxvF6vNertf
bXbb/XGzO+yP593hdDxfD6fL+Xo7XW7Ry/X5/T3f3/vj9Xx/Hq9P6fWG3B+Q
xf0PEgBc8Q==
       "]}, CompressedData["
1:eJxTTMoPSmJkYGAoARKMo4DuAAA0+gOR
      "]}], SparseArray[
    Automatic, {124, 1}, 0, {
     1, {{0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
       8, 8, 9, 10, 11, 11, 11, 11, 12, 13, 13, 13, 14, 15, 15, 15, 16, 17, 
       18, 19, 19, 20, 21, 21, 21, 22, 23, 23, 23, 24, 25, 25, 25, 25, 25, 25,
        25, 26, 27, 27, 27, 28, 29, 29, 29, 29, 30, 31, 32, 32, 32, 33, 34, 
       35, 36, 37, 38, 39, 39, 39, 40, 41, 41, 41, 42, 43, 43, 43, 44, 45, 46,
        47, 47, 47, 48, 49, 50, 51, 51}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1}}]}, {
   SparseArray[Automatic, {126, 126}, 0, {1, {CompressedData["
1:eJwl0Q1HHQAAhtFbKaVpmlKWUpZSSillKaWUspS+lFLKTSmlq5RSlBERERER
EWPEGCMiIiIiIiJiRMQYERF10sv5A++TEQy1TYQFAoGlwPsiiCKGD3zkE4kk
k0IaGWSSTS75FFJMKWVUUEUNdTTQSDOtdNBFD30MMMgwo4wTYooZ5lhgke8s
s8Iqa6yzwSZbbLPDLj/4yR6/+M0f9jngkCOOOeGUM8654JIrrrnhL7fccc8/
/vPAI08880K4gyOJJpY44kkgic+kks4XssghjwKKKOEr5VRSTS31fKOJFtrp
pJte+gkyxAhjvAWfZJpZ5nkFj8c3Hw==
       "], CompressedData["
1:eJwNwgOSJAEAALAe2+aObdu2bdvW2+9SEY72pREYAIAXCAD+B8DfHwiHh8KC
EBgCAoXDECgoHIlAYeBINAqDQ6KxGBwejMaCsQUiaU4gUQhEMokiJJL5NLqR
SudRaSwmS8BgsekMJpPL5/L4bA6PxuFS2ByBUMP4E5L/BGJZQCRVS2VKsUQm
kkgVSoNcqZLIFQq1RqzS/KnUOr1LqzdqdQa53kjVGZyuvMXqNlvtZovNanda
bA6702WyObQmh9kb9PqDbo/P6w94fAGRzw9xe8KRWygSC4WjkVgiHI3HEqlo
PJlIZeLJdCqTS6azmVwhnc2bcgV8Nt9qf8qVWalSK5WrlVqjXK3XGq1qvdlo
tYv1ZrE56PaXnd602x90eoN2rz+azIfj2WgyHY6n3fGkNJoThrPl+tdZrJbr
7WK1WW/3q81uuz9udof98bw7nI7n6+F0OV9vp8stdLk+v7/n+3t/vJ7vz+P1
Kb7eoPsDtLj/A2lUX+g=
       "]}, CompressedData["
1:eJxTTMoPSmJkYGCoAhKMo2CAAABTaQOd
      "]}], SparseArray[
    Automatic, {126, 1}, 0, {
     1, {{0, 1, 1, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 10, 11, 11, 11, 12, 
       12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 14, 15, 15, 15, 15, 15,
        16, 16, 16, 16, 16, 16, 17, 18, 19, 19, 19, 19, 20, 21, 22, 22, 22, 
       23, 24, 24, 24, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 28, 28,
        28, 29, 30, 30, 30, 31, 32, 33, 34, 35, 36, 36, 36, 37, 38, 38, 38, 
       39, 40, 41, 41, 41, 41, 42, 43, 43, 43, 43, 43, 43, 43, 43, 44, 45, 45,
        45, 46, 47, 47, 47, 48, 49, 49, 49, 49, 49, 50, 51, 51, 51, 51, 51, 
       52}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
       1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}}}, {1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1}}]}}, $CellContext`rule$$, $CellContext`steps$$, \
$CellContext`maxCalcTime$$, $CellContext`time$$, $CellContext`length$$ = 
  41, $CellContext`d3$$}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`d3$$ = False, $CellContext`maxCalcTime$$ = 
     1, $CellContext`rule$$ = 2182, $CellContext`steps$$ = 
     40, $CellContext`time$$ = 0, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`rule$$], 2182, "rule number"}, 0}, {{
        Hold[$CellContext`steps$$], 40, "number of steps"}, 1}, {{
        Hold[$CellContext`maxCalcTime$$], 1, "max computation time (s)"}, 
       1}, {{
        Hold[$CellContext`d3$$], False, "3D"}, {True, False}}, {
       Hold[$CellContext`time$$], 0, 
       Dynamic[$CellContext`length$$ - 1], 1}, {
       Hold[
        Grid[{{
           Grid[{{
              Manipulate`Place[1], 
              Spacer[16], 
              Manipulate`Place[2], 
              Spacer[16], 
              Manipulate`Place[3], 
              Spacer[16], 
              Manipulate`Place[4]}}]}, {
           Manipulate`Place[5]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {576., {193., 197.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, 
       "Variables" :> {$CellContext`d3$$ = False, $CellContext`maxCalcTime$$ = 
         1, $CellContext`rule$$ = 2182, $CellContext`steps$$ = 
         40, $CellContext`time$$ = 0}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> ($CellContext`list$$ = \
$CellContext`generateList$$[$CellContext`rule$$, $CellContext`steps$$, \
$CellContext`maxCalcTime$$]; $CellContext`length$$ = 
         Length[$CellContext`list$$]; $CellContext`steps$$ = 
         Length[$CellContext`list$$] - 1; 
        If[$CellContext`time$$ > $CellContext`steps$$, $CellContext`time$$ = \
$CellContext`steps$$]; Dynamic[
          GraphPlot[
           $CellContext`linearAlgebraToGraph$$[
            Part[$CellContext`list$$, $CellContext`time$$ + 1], 
            "3D" -> $CellContext`d3$$], ImageSize -> Large]]), 
       "Specifications" :> {{{$CellContext`rule$$, 2182, "rule number"}, 0, 
          FieldSize -> 8, ControlPlacement -> 
          1}, {{$CellContext`steps$$, 40, "number of steps"}, 1, FieldSize -> 
          8, ControlPlacement -> 
          2}, {{$CellContext`maxCalcTime$$, 1, "max computation time (s)"}, 1,
           FieldSize -> 8, ControlPlacement -> 
          3}, {{$CellContext`d3$$, False, "3D"}, {True, False}, 
          ControlPlacement -> 4}, {$CellContext`time$$, 0, 
          Dynamic[$CellContext`length$$ - 1], 1, FieldSize -> 18, 
          ControlPlacement -> 5}, 
         Grid[{{
            Grid[{{
               Manipulate`Place[1], 
               Spacer[16], 
               Manipulate`Place[2], 
               Spacer[16], 
               Manipulate`Place[3], 
               Spacer[16], 
               Manipulate`Place[4]}}]}, {
            Manipulate`Place[5]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
      
      ImageSizeCache->{620., {251., 257.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{{
    DefaultValues[$CellContext`linearAlgebraToGraph$$] = {HoldPattern[
         Options[$CellContext`linearAlgebraToGraph$$]] :> {
        "3D" -> False, "Size" -> Medium}}, 
     DownValues[$CellContext`linearAlgebraToGraph$$] = {HoldPattern[
         $CellContext`linearAlgebraToGraph$$[{
           Pattern[$CellContext`aM, 
            Blank[]], 
           Pattern[$CellContext`sV, 
            Blank[]]}, 
          OptionsPattern[]]] :> 
       Module[{$CellContext`adjacencyMatrix = 
          Normal[$CellContext`aM], $CellContext`stateVector = 
          Normal[$CellContext`sV]}, 
         Return[
          If[
           OptionValue["3D"], 
           Graph3D[
            
            AdjacencyGraph[$CellContext`adjacencyMatrix, VertexStyle -> 
             Table[$CellContext`i -> 
               If[Part[$CellContext`stateVector, $CellContext`i] === {1}, 
                 RGBColor[0.5, 0, 0.5], 
                 RGBColor[1, 0.5, 0]], {$CellContext`i, 1, 
                Length[$CellContext`stateVector], 1}], ImageSize -> 
             OptionValue["Size"]]], 
           
           AdjacencyGraph[$CellContext`adjacencyMatrix, VertexStyle -> 
            Table[$CellContext`i -> 
              If[Part[$CellContext`stateVector, $CellContext`i] === {1}, 
                RGBColor[0.5, 0, 0.5], 
                RGBColor[1, 0.5, 0]], {$CellContext`i, 1, 
               Length[$CellContext`stateVector], 1}], ImageSize -> 
            OptionValue["Size"]]]]]}, 
     Options[$CellContext`linearAlgebraToGraph$$] = {
      "3D" -> False, "Size" -> Medium}}, {
    DownValues[$CellContext`graphToLinearAlgebra$$] = {HoldPattern[
         $CellContext`graphToLinearAlgebra$$[
          Pattern[$CellContext`graph, 
           Blank[]]]] :> {
         SparseArray[
          AdjacencyMatrix[
           IndexGraph[$CellContext`graph]]], 
         SparseArray[
          Transpose[{
            ReplaceAll[
             SortBy[
              ReplaceAll[
               Options[
                IndexGraph[$CellContext`graph], VertexStyle], {
                VertexStyle -> Pattern[$CellContext`a, 
                   Blank[]]} :> $CellContext`a], 
              ReplaceAll[#, (Pattern[$CellContext`a, 
                  Blank[]] -> Pattern[$CellContext`b, 
                  Blank[]]) :> $CellContext`a]& ], (Blank[] -> 
              Pattern[$CellContext`a, 
                Blank[]]) :> 
             If[$CellContext`a === RGBColor[0.5, 0, 0.5], 1, 0]]}]]}}}, {
    DownValues[$CellContext`ruleState$$] = {HoldPattern[
         $CellContext`ruleState$$[
          Pattern[$CellContext`ruleNumber, 
           Blank[]], 
          Pattern[$CellContext`case, 
           Blank[]]]] :> Part[
         IntegerDigits[$CellContext`ruleNumber, 2, 16], -$CellContext`case - 
         1]}}, {DownValues[$CellContext`ruleDivision$$] = {HoldPattern[
         $CellContext`ruleDivision$$[
          Pattern[$CellContext`ruleNumber, 
           Blank[]], 
          Pattern[$CellContext`case, 
           Blank[]]]] :> Part[
         IntegerDigits[$CellContext`ruleNumber, 2, 16], -$CellContext`case - 
         9]}}, {DownValues[$CellContext`configurationVector$$] = {
      HoldPattern[
         $CellContext`configurationVector$$[{
           Pattern[$CellContext`aM, 
            Blank[]], 
           Pattern[$CellContext`sV, 
            Blank[]]}]] :> 
       Normal[4 $CellContext`sV + Dot[$CellContext`aM, $CellContext`sV]]}}, {
    DownValues[$CellContext`newState$$] = {HoldPattern[
         $CellContext`newState$$[{
           Pattern[$CellContext`aM$, 
            Blank[]], 
           Pattern[$CellContext`sV$, 
            Blank[]]}, 
          Pattern[$CellContext`ruleNumber$, 
           Blank[]]]] :> SparseArray[
         Map[$CellContext`ruleState$$[$CellContext`ruleNumber$, #]& , 
          $CellContext`configurationVector$$[{$CellContext`aM$, \
$CellContext`sV$}]]]}}, {DownValues[$CellContext`evolve$$] = {HoldPattern[
         $CellContext`evolve$$[{
           Pattern[$CellContext`aM$, 
            Blank[]], 
           Pattern[$CellContext`sV$, 
            Blank[]]}, 
          Pattern[$CellContext`rN$, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`it$, 
            Blank[]], 1]]] :> 
       Module[{$CellContext`divisionVector = 
          Map[$CellContext`ruleDivision$$[$CellContext`rN$, #]& , 
            $CellContext`configurationVector$$[{$CellContext`aM$, \
$CellContext`sV$}]], $CellContext`adjacencyMatrix = $CellContext`aM$, \
$CellContext`stateVector = $CellContext`newState$$[{$CellContext`aM$, \
$CellContext`sV$}, $CellContext`rN$], $CellContext`replicate, \
$CellContext`vertexNumber, $CellContext`state, $CellContext`line, \
$CellContext`ones, $CellContext`insert, $CellContext`subMatrix}, \
$CellContext`replicate[
            Pattern[$CellContext`v, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`n, 
             Blank[]]] := Nest[Insert[#, 
             
             Part[#, $CellContext`p], $CellContext`p]& , $CellContext`v, \
$CellContext`n]; While[
           Not[
            FreeQ[$CellContext`divisionVector, 1]], $CellContext`vertexNumber = 
            Part[
              Part[
               Position[$CellContext`divisionVector, {1}], 1], 
              1]; $CellContext`stateVector = \
$CellContext`replicate[$CellContext`stateVector, $CellContext`vertexNumber, 
              2]; $CellContext`line = Normal[
              
              Part[$CellContext`adjacencyMatrix, $CellContext`vertexNumber]]; \
$CellContext`ones = Catenate[
              Position[$CellContext`line, 1]]; $CellContext`adjacencyMatrix = 
            Delete[$CellContext`adjacencyMatrix, $CellContext`vertexNumber]; \
$CellContext`insert = SparseArray[{{1, 
                 Part[$CellContext`ones, 1]} -> 1, {2, 
                 Part[$CellContext`ones, 2]} -> 1, {3, 
                 Part[$CellContext`ones, 3]} -> 1}, {3, 
               Length[$CellContext`line]}]; 
           Do[$CellContext`adjacencyMatrix = 
             Insert[$CellContext`adjacencyMatrix, 
               
               Part[$CellContext`insert, $CellContext`i], \
$CellContext`vertexNumber], {$CellContext`i, 1, 
              3}]; $CellContext`adjacencyMatrix = 
            Transpose[$CellContext`adjacencyMatrix]; $CellContext`line = 
            Normal[
              
              Part[$CellContext`adjacencyMatrix, $CellContext`vertexNumber]]; \
$CellContext`ones = Catenate[
              Position[$CellContext`line, 1]]; $CellContext`adjacencyMatrix = 
            Delete[$CellContext`adjacencyMatrix, $CellContext`vertexNumber]; \
$CellContext`insert = SparseArray[{{1, 
                 Part[$CellContext`ones, 1]} -> 1, {2, 
                 Part[$CellContext`ones, 2]} -> 1, {3, 
                 Part[$CellContext`ones, 3]} -> 1}, {3, 
               Length[$CellContext`line]}]; 
           Do[$CellContext`adjacencyMatrix = 
             Insert[$CellContext`adjacencyMatrix, 
               
               Part[$CellContext`insert, $CellContext`i], \
$CellContext`vertexNumber], {$CellContext`i, 1, 3}]; 
           Part[$CellContext`adjacencyMatrix, 
              Span[$CellContext`vertexNumber, $CellContext`vertexNumber + 2], 
              
              
              Span[$CellContext`vertexNumber, $CellContext`vertexNumber + 
               2]] = {{0, 1, 1}, {1, 0, 1}, {1, 1, 
             0}}; $CellContext`divisionVector = $CellContext`replicate[
              
              ReplacePart[$CellContext`divisionVector, \
$CellContext`vertexNumber -> {0}], $CellContext`vertexNumber, 2]; Null]; 
         Return[{$CellContext`adjacencyMatrix, $CellContext`stateVector}]; 
         Null]}}, {DownValues[$CellContext`generateList$$] = {HoldPattern[
         $CellContext`generateList$$[
          Pattern[$CellContext`rl$, 
           Blank[]], 
          Pattern[$CellContext`stps$, 
           Blank[]], 
          Pattern[$CellContext`max$, 
           Blank[]]]] :> 
       Module[{$CellContext`inRule$ = $CellContext`rl$, $CellContext`inSteps$ = \
$CellContext`stps$, $CellContext`maxTime$ = $CellContext`max$, \
$CellContext`inList$ = {{
            SparseArray[
             Automatic, {10, 10}, 0, {
              1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{2}, {9}, {10}, {
                1}, {3}, {4}, {2}, {4}, {5}, {2}, {3}, {6}, {3}, {6}, {7}, {
                4}, {5}, {8}, {5}, {8}, {9}, {6}, {7}, {10}, {1}, {7}, {10}, {
                1}, {8}, {9}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
             Automatic, {10, 1}, 0, {
              1, {{0, 1, 1, 1, 1, 1, 2, 3, 3, 4, 5}, {{1}, {1}, {1}, {1}, {
                1}}}, {1, 1, 1, 1, 1}}]}}, $CellContext`i$}, TimeConstrained[
           
           For[$CellContext`i$ = 1, $CellContext`i$ <= $CellContext`inSteps$, 
            
            Increment[$CellContext`i$], 
            AppendTo[$CellContext`inList$, 
             $CellContext`evolve$$[
              
              Last[$CellContext`inList$], $CellContext`inRule$]]], \
$CellContext`maxTime$]; Return[$CellContext`inList$]; Null]}}}]], "Output",
 CellChangeTimes->{{3.8705089106762867`*^9, 3.870508956754631*^9}, 
   3.870509108055841*^9, {3.870509153574072*^9, 3.870509197477077*^9}, {
   3.870509346783514*^9, 3.870509419329041*^9}, {3.870509460514505*^9, 
   3.870509481018723*^9}, {3.87050951854963*^9, 3.870509542920375*^9}, 
   3.87050964506126*^9, 3.8705096817686996`*^9, 3.8705097337677517`*^9, {
   3.870509770540269*^9, 3.870509774003285*^9}, {3.870509820521385*^9, 
   3.870509830238785*^9}, {3.870510924138977*^9, 3.8705109243428917`*^9}, {
   3.8705133737639217`*^9, 3.870513380194182*^9}, {3.870668453187706*^9, 
   3.8706684542080193`*^9}},
 TextAlignment->Center,
 CellLabel->
  "Out[288]=",ExpressionUUID->"1f92f9c0-4e3b-4c74-b29a-bfc6001b85d5"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Growth", "Section",
 CellChangeTimes->{{3.869122136948358*^9, 3.86912213782021*^9}, {
  3.8701586395680313`*^9, 3.8701586410968637`*^9}, {3.870493727163892*^9, 
  3.87049372911884*^9}, {3.870509860703402*^9, 
  3.8705098703649473`*^9}},ExpressionUUID->"553dd506-7ca7-4399-926f-\
aab15e8ada83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "linearAlgebraToGraph", ",", " ", "graphToLinearAlgebra", ",", 
     "ruleState", ",", "ruleDivision", ",", "configurationVector", ",", 
     "newState", ",", "evolve", ",", "generateList", ",", "list", ",", "rule",
      ",", "steps", ",", "maxCalcTime", ",", "time", ",", "length", ",", 
     "d3"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", " ", "Changing"}]}]}]}]}]}]}]}], " ", "graph", " ", 
     
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"format", " ", "--"}], "--"}], "--"}], "--"}], "--"}], 
       "--"}], "--"}], "--"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "linearAlgebraToGraph", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<3D\>\"", "->", "False"}], ",", " ", 
       RowBox[{"\"\<Size\>\"", "->", "Medium"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"linearAlgebraToGraph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aM_", ",", "sV_"}], "}"}], ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"adjacencyMatrix", "=", 
          RowBox[{"Normal", "[", "aM", "]"}]}], ",", 
         RowBox[{"stateVector", "=", 
          RowBox[{"Normal", "[", "sV", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<3D\>\"", "]"}], ",", 
          RowBox[{"Graph3D", "[", 
           RowBox[{"AdjacencyGraph", "[", 
            RowBox[{"adjacencyMatrix", ",", 
             RowBox[{"VertexStyle", "\[Rule]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"i", "->", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stateVector", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "===", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                   TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                    "RGBColorSwatchTemplate"], ",", 
                   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                    "RGBColorSwatchTemplate"]}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "stateVector", "]"}], ",", "1"}], 
                 "}"}]}], "]"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"OptionValue", "[", "\"\<Size\>\"", "]"}]}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"AdjacencyGraph", "[", 
           RowBox[{"adjacencyMatrix", ",", 
            RowBox[{"VertexStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"i", "->", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"stateVector", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "===", 
                   RowBox[{"{", "1", "}"}]}], ",", 
                  TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                   "RGBColorSwatchTemplate"], ",", 
                  TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
                   "RGBColorSwatchTemplate"]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "stateVector", "]"}], ",", "1"}], 
                "}"}]}], "]"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"OptionValue", "[", "\"\<Size\>\"", "]"}]}]}], "]"}]}], 
         "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"graphToLinearAlgebra", "[", "graph_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SparseArray", "[", 
        RowBox[{"AdjacencyMatrix", "[", 
         RowBox[{"IndexGraph", "[", "graph", "]"}], "]"}], "]"}], ",", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Options", "[", 
               RowBox[{
                RowBox[{"IndexGraph", "[", "graph", "]"}], ",", 
                "VertexStyle"}], "]"}], "/.", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"VertexStyle", "\[Rule]", "a_"}], "}"}], ":>", 
               "a"}]}], ",", 
             RowBox[{
              RowBox[{"#", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"a_", "->", "b_"}], ")"}], ":>", "a"}]}], "&"}]}], 
            "]"}], "/.", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"_", "->", "a_"}], ")"}], ":>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"a", "===", 
               TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
                "RGBColorSwatchTemplate"]}], ",", "1", ",", "0"}], "]"}]}]}], 
          "}"}], "]"}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Evolution", " ", "--"}], "--"}], "--"}], "--"}], 
                 "--"}], "--"}], "--"}], "--"}]}]}]}]}]}]}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ruleState", "[", 
      RowBox[{"ruleNumber_", ",", "case_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"ruleNumber", ",", "2", ",", "16"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "case"}], "-", "1"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ruleDivision", "[", 
      RowBox[{"ruleNumber_", ",", "case_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"ruleNumber", ",", "2", ",", "16"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "case"}], "-", "9"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"configurationVector", "[", 
      RowBox[{"{", 
       RowBox[{"aM_", ",", "sV_"}], "}"}], "]"}], ":=", 
     RowBox[{"Normal", "[", 
      RowBox[{
       RowBox[{"4", "\[Times]", "sV"}], "+", 
       RowBox[{"aM", ".", "sV"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newState", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aM_", ",", "sV_"}], "}"}], ",", "ruleNumber_"}], "]"}], ":=",
      " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ruleState", "[", 
          RowBox[{"ruleNumber", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"configurationVector", "[", 
         RowBox[{"{", 
          RowBox[{"aM", ",", "sV"}], "}"}], "]"}]}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"evolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aM_", ",", "sV_"}], "}"}], ",", "rN_", ",", 
       RowBox[{"it_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"divisionVector", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ruleDivision", "[", 
              RowBox[{"rN", ",", "#"}], "]"}], "&"}], ",", 
            RowBox[{"configurationVector", "[", 
             RowBox[{"{", 
              RowBox[{"aM", ",", "sV"}], "}"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"adjacencyMatrix", "=", "aM"}], ",", 
         RowBox[{"stateVector", "=", 
          RowBox[{"newState", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"aM", ",", "sV"}], "}"}], ",", "rN"}], "]"}]}], ",", 
         "replicate", ",", "vertexNumber", ",", "state", ",", " ", "line", 
         ",", " ", "ones", ",", "insert", ",", "subMatrix"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "Function", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"replicate", "[", 
          RowBox[{"v_", ",", "p_", ",", "n_"}], "]"}], ":=", 
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Insert", "[", 
             RowBox[{"#", ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "p", "]"}], "]"}], ",", "p"}], "]"}], "&"}], ",", 
           "v", ",", "n"}], "]"}]}], ";", "\t", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Loop", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"FreeQ", "[", 
            RowBox[{"divisionVector", ",", "1"}], "]"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"vertexNumber", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{"divisionVector", ",", 
                RowBox[{"{", "1", "}"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Update", " ", "state", " ", "vector"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"stateVector", "=", 
            RowBox[{"replicate", "[", 
             RowBox[{"stateVector", ",", "vertexNumber", ",", "2"}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "First", " ", "division", " ", "pass", " ", "on", " ", 
             "adjacency", " ", "matrix"}], "*)"}], "\t", 
           "\[IndentingNewLine]", 
           RowBox[{"line", " ", "=", " ", 
            RowBox[{"Normal", "@", 
             RowBox[{"adjacencyMatrix", "[", 
              RowBox[{"[", "vertexNumber", "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ones", " ", "=", " ", 
            RowBox[{"Catenate", "@", 
             RowBox[{"Position", "[", 
              RowBox[{"line", ",", "1"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"adjacencyMatrix", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"adjacencyMatrix", ",", "vertexNumber"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"insert", "=", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "->", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "->", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"3", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "->", "1"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", 
                RowBox[{"Length", "[", "line", "]"}]}], "}"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"adjacencyMatrix", "=", 
              RowBox[{"Insert", "[", 
               RowBox[{"adjacencyMatrix", ",", 
                RowBox[{"insert", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "vertexNumber"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", "Transpose", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"adjacencyMatrix", "=", 
            RowBox[{"Transpose", "[", "adjacencyMatrix", "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Second", " ", "division", " ", "pass", " ", "on", " ", 
             "adjacency", " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"line", " ", "=", " ", 
            RowBox[{"Normal", "@", 
             RowBox[{"adjacencyMatrix", "[", 
              RowBox[{"[", "vertexNumber", "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ones", " ", "=", " ", 
            RowBox[{"Catenate", "@", 
             RowBox[{"Position", "[", 
              RowBox[{"line", ",", "1"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"adjacencyMatrix", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"adjacencyMatrix", ",", "vertexNumber"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"insert", "=", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "->", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "->", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"3", ",", 
                   RowBox[{"ones", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "->", "1"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", 
                RowBox[{"Length", "[", "line", "]"}]}], "}"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"adjacencyMatrix", "=", 
              RowBox[{"Insert", "[", 
               RowBox[{"adjacencyMatrix", ",", 
                RowBox[{"insert", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "vertexNumber"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Adding", " ", "the", " ", "submatrix"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"adjacencyMatrix", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"vertexNumber", ";;", 
                RowBox[{"vertexNumber", "+", "2"}]}], ",", 
               RowBox[{"vertexNumber", ";;", 
                RowBox[{"vertexNumber", "+", "2"}]}]}], "]"}], "]"}], " ", 
            "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Update", " ", "division", " ", "vector"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"divisionVector", "=", 
            RowBox[{"replicate", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"divisionVector", ",", 
                RowBox[{"vertexNumber", "->", 
                 RowBox[{"{", "0", "}"}]}]}], "]"}], ",", "vertexNumber", ",",
               "2"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"adjacencyMatrix", ",", "stateVector"}], "}"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"generateList", "[", 
      RowBox[{"rl_", ",", "stps_", ",", "max_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inRule", "=", "rl"}], ",", 
         RowBox[{"inSteps", "=", "stps"}], ",", 
         RowBox[{"maxTime", "=", "max"}], ",", 
         RowBox[{"inList", "=", 
          RowBox[{"{", 
           RowBox[{"Length", "@", 
            RowBox[{
             InterpretationBox[
              DynamicModuleBox[{Typeset`open = False}, 
               TemplateBox[{"List", 
                 StyleBox[
                 "\"Initial graph\"", "IconizedCustomName", StripOnInput -> 
                  False], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["List", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "10"}], "}"}], "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["1944", "IconizedItem"]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 Dynamic[Typeset`open]},
                "IconizedObject"]],
              {
              SparseArray[
               Automatic, {10, 10}, 0, {
                1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{2}, {9}, {
                  10}, {1}, {3}, {4}, {2}, {4}, {5}, {2}, {3}, {6}, {3}, {
                  6}, {7}, {4}, {5}, {8}, {5}, {8}, {9}, {6}, {7}, {10}, {
                  1}, {7}, {10}, {1}, {8}, {9}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 
                 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                 1}}], SparseArray[
               Automatic, {10, 1}, 0, {
                1, {{0, 1, 1, 1, 1, 1, 2, 3, 3, 4, 5}, {{1}, {1}, {1}, {1}, {
                  1}}}, {1, 1, 1, 1, 1}}]},
              SelectWithContents->True,
              Selectable->False], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"inGraph", "=", 
          InterpretationBox[
           DynamicModuleBox[{Typeset`open = False}, 
            TemplateBox[{"List", 
              StyleBox[
              "\"Initial graph\"", "IconizedCustomName", StripOnInput -> 
               False], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                   TagBox["List", "IconizedItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "IconizedLabel"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "10"}], "}"}], "IconizedItem"]}]}, {
                 RowBox[{
                   TagBox["\"Byte count: \"", "IconizedLabel"], 
                   "\[InvisibleSpace]", 
                   TagBox["1944", "IconizedItem"]}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              Dynamic[Typeset`open]},
             "IconizedObject"]],
           {
           SparseArray[
            Automatic, {10, 10}, 0, {
             1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{2}, {9}, {10}, {
               1}, {3}, {4}, {2}, {4}, {5}, {2}, {3}, {6}, {3}, {6}, {7}, {
               4}, {5}, {8}, {5}, {8}, {9}, {6}, {7}, {10}, {1}, {7}, {10}, {
               1}, {8}, {9}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
            Automatic, {10, 1}, 0, {
             1, {{0, 1, 1, 1, 1, 1, 2, 3, 3, 4, 5}, {{1}, {1}, {1}, {1}, {
               1}}}, {1, 1, 1, 1, 1}}]},
           SelectWithContents->True,
           Selectable->False]}], ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TimeConstrained", "[", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "<=", "inSteps"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"inGraph", "=", 
              RowBox[{"evolve", "[", 
               RowBox[{"inGraph", ",", "inRule"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"inList", ",", 
               RowBox[{"Length", "@", 
                RowBox[{"inGraph", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "maxTime"}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "inList", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Manipulate", " ", "--"}], "--"}], "--"}], "--"}],
                  "--"}], "--"}], "--"}], "--"}]}]}]}]}]}]}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"list", "=", 
        RowBox[{"generateList", "[", 
         RowBox[{"rule", ",", "steps", ",", "maxCalcTime"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"length", "=", 
        RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"steps", "=", 
        RowBox[{
         RowBox[{"Length", "[", "list", "]"}], "-", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"time", ">", "steps"}], ",", 
         RowBox[{"time", "=", "steps"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"list", ",", 
          RowBox[{"DataRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "steps"}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", "Purple"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "\"\<graph order\>\""}], "}"}]}]}], 
         "]"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Control", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rule", ",", "2182", ",", "\"\<rule number\>\""}], 
                 "}"}], ",", "0", ",", 
                RowBox[{"FieldSize", "->", "8"}]}], "}"}], "]"}], ",", 
             RowBox[{"Spacer", "[", "20", "]"}], ",", 
             RowBox[{"Control", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "steps", ",", "100", ",", "\"\<number of steps\>\""}], "}"}],
                 ",", "1", ",", 
                RowBox[{"FieldSize", "->", "8"}]}], "}"}], "]"}], ",", 
             RowBox[{"Spacer", "[", "20", "]"}], ",", 
             RowBox[{"Control", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "maxCalcTime", ",", "1", ",", " ", 
                  "\"\<max computation time (s)\>\""}], "}"}], ",", "1", ",", 
                
                RowBox[{"FieldSize", "->", "8"}]}], "}"}], "]"}]}], "}"}], 
           "}"}], "]"}], "}"}], "}"}], "]"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.870508534948763*^9, 3.870508828746847*^9}, {
   3.870508861337208*^9, 3.8705089328954363`*^9}, {3.870508980373809*^9, 
   3.870509103518165*^9}, {3.870509145382848*^9, 3.87050919601167*^9}, {
   3.870509226275463*^9, 3.8705092586675997`*^9}, {3.870509291858261*^9, 
   3.87050931047705*^9}, {3.870509342391827*^9, 3.870509418640276*^9}, {
   3.870509456821175*^9, 3.870509480150557*^9}, {3.870509512409349*^9, 
   3.870509541710804*^9}, {3.870509644130185*^9, 3.870509773491928*^9}, {
   3.87050981573783*^9, 3.870509829747181*^9}, {3.870510988290468*^9, 
   3.870511041320425*^9}, {3.8705110729516687`*^9, 3.8705110853436337`*^9}, {
   3.870511179597536*^9, 3.87051119000665*^9}, {3.870511374338418*^9, 
   3.870511402339102*^9}, {3.8705115111481667`*^9, 3.870511518256179*^9}, {
   3.8705116580272083`*^9, 3.870511674814405*^9}, {3.8705119533263273`*^9, 
   3.8705119637173557`*^9}, {3.870512002877049*^9, 3.870512028622286*^9}, {
   3.870512102028556*^9, 3.87051214365935*^9}, {3.870512190334806*^9, 
   3.870512372355507*^9}, {3.870512430227024*^9, 3.870512478133191*^9}, {
   3.870512589826395*^9, 3.870512841868102*^9}, 3.870512920771995*^9, {
   3.870512956510133*^9, 3.870513088830497*^9}, 3.870513174040782*^9, 
   3.870668444187974*^9},
 CellLabel->
  "In[289]:=",ExpressionUUID->"7a6f7feb-3264-4f78-a129-90b1b5c87755"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`linearAlgebraToGraph$$, \
$CellContext`graphToLinearAlgebra$$, $CellContext`ruleState$$, \
$CellContext`ruleDivision$$, $CellContext`configurationVector$$, \
$CellContext`newState$$, $CellContext`evolve$$, $CellContext`generateList$$, \
$CellContext`list$$ = CompressedData["
1:eJwt0CFLQwEYAMCnYUFExhgGGQPHwlgaYhCD4SFLMmQMgxhkMBGDiohJDCZZ
HMO4tGRYWF5cFJMYTMaxYDKJyC584f7AbbavmpdLSZJ0WGGVNbLkQp71sEEh
lKiEKjW22WE3pOyHOg0OaXEcTmmHcy7CNbfhnofwRDf0eQ4DhmHEOEyYhjfe
+eCLefjhlz8yQnLkKVKmwhZ7pDQ44oQzbrjjkS49BrwwYsKUVz6Z8c0/mWXn
FKhSI+WABa+gLKk=
  
  "], $CellContext`rule$$, $CellContext`steps$$, $CellContext`maxCalcTime$$, \
$CellContext`time$$, $CellContext`length$$ = 101, $CellContext`d3$$}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`maxCalcTime$$ = 1, $CellContext`rule$$ = 
     2182, $CellContext`steps$$ = 100, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`rule$$], 2182, "rule number"}, 0}, {{
        Hold[$CellContext`steps$$], 100, "number of steps"}, 1}, {{
        Hold[$CellContext`maxCalcTime$$], 1, "max computation time (s)"}, 1}, {
       Hold[
        Grid[{{
           Grid[{{
              Manipulate`Place[1], 
              Spacer[20], 
              Manipulate`Place[2], 
              Spacer[20], 
              Manipulate`Place[3]}}]}}]], Manipulate`Dump`ThisIsNotAControl}},
      Typeset`size$$ = {576., {177., 182.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, 
       "Variables" :> {$CellContext`maxCalcTime$$ = 1, $CellContext`rule$$ = 
         2182, $CellContext`steps$$ = 100}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> ($CellContext`list$$ = \
$CellContext`generateList$$[$CellContext`rule$$, $CellContext`steps$$, \
$CellContext`maxCalcTime$$]; $CellContext`length$$ = 
         Length[$CellContext`list$$]; $CellContext`steps$$ = 
         Length[$CellContext`list$$] - 1; 
        If[$CellContext`time$$ > $CellContext`steps$$, $CellContext`time$$ = \
$CellContext`steps$$]; Dynamic[
          
          ListPlot[$CellContext`list$$, 
           DataRange -> {0, $CellContext`steps$$}, ImageSize -> Large, 
           PlotStyle -> Purple, AxesLabel -> {"time", "graph order"}]]), 
       "Specifications" :> {{{$CellContext`rule$$, 2182, "rule number"}, 0, 
          FieldSize -> 8, ControlPlacement -> 
          1}, {{$CellContext`steps$$, 100, "number of steps"}, 1, FieldSize -> 
          8, ControlPlacement -> 
          2}, {{$CellContext`maxCalcTime$$, 1, "max computation time (s)"}, 1,
           FieldSize -> 8, ControlPlacement -> 3}, 
         Grid[{{
            Grid[{{
               Manipulate`Place[1], 
               Spacer[20], 
               Manipulate`Place[2], 
               Spacer[20], 
               Manipulate`Place[3]}}]}}]}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{620., {221., 227.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{{
    DefaultValues[$CellContext`linearAlgebraToGraph$$] = {HoldPattern[
         Options[$CellContext`linearAlgebraToGraph$$]] :> {
        "3D" -> False, "Size" -> Medium}}, 
     DownValues[$CellContext`linearAlgebraToGraph$$] = {HoldPattern[
         $CellContext`linearAlgebraToGraph$$[{
           Pattern[$CellContext`aM, 
            Blank[]], 
           Pattern[$CellContext`sV, 
            Blank[]]}, 
          OptionsPattern[]]] :> 
       Module[{$CellContext`adjacencyMatrix = 
          Normal[$CellContext`aM], $CellContext`stateVector = 
          Normal[$CellContext`sV]}, 
         Return[
          If[
           OptionValue["3D"], 
           Graph3D[
            
            AdjacencyGraph[$CellContext`adjacencyMatrix, VertexStyle -> 
             Table[$CellContext`i -> 
               If[Part[$CellContext`stateVector, $CellContext`i] === {1}, 
                 RGBColor[0.5, 0, 0.5], 
                 RGBColor[1, 0.5, 0]], {$CellContext`i, 1, 
                Length[$CellContext`stateVector], 1}], ImageSize -> 
             OptionValue["Size"]]], 
           
           AdjacencyGraph[$CellContext`adjacencyMatrix, VertexStyle -> 
            Table[$CellContext`i -> 
              If[Part[$CellContext`stateVector, $CellContext`i] === {1}, 
                RGBColor[0.5, 0, 0.5], 
                RGBColor[1, 0.5, 0]], {$CellContext`i, 1, 
               Length[$CellContext`stateVector], 1}], ImageSize -> 
            OptionValue["Size"]]]]]}, 
     Options[$CellContext`linearAlgebraToGraph$$] = {
      "3D" -> False, "Size" -> Medium}}, {
    DownValues[$CellContext`graphToLinearAlgebra$$] = {HoldPattern[
         $CellContext`graphToLinearAlgebra$$[
          Pattern[$CellContext`graph, 
           Blank[]]]] :> {
         SparseArray[
          AdjacencyMatrix[
           IndexGraph[$CellContext`graph]]], 
         SparseArray[
          Transpose[{
            ReplaceAll[
             SortBy[
              ReplaceAll[
               Options[
                IndexGraph[$CellContext`graph], VertexStyle], {
                VertexStyle -> Pattern[$CellContext`a, 
                   Blank[]]} :> $CellContext`a], 
              ReplaceAll[#, (Pattern[$CellContext`a, 
                  Blank[]] -> Pattern[$CellContext`b, 
                  Blank[]]) :> $CellContext`a]& ], (Blank[] -> 
              Pattern[$CellContext`a, 
                Blank[]]) :> 
             If[$CellContext`a === RGBColor[0.5, 0, 0.5], 1, 0]]}]]}}}, {
    DownValues[$CellContext`ruleState$$] = {HoldPattern[
         $CellContext`ruleState$$[
          Pattern[$CellContext`ruleNumber, 
           Blank[]], 
          Pattern[$CellContext`case, 
           Blank[]]]] :> Part[
         IntegerDigits[$CellContext`ruleNumber, 2, 16], -$CellContext`case - 
         1]}}, {DownValues[$CellContext`ruleDivision$$] = {HoldPattern[
         $CellContext`ruleDivision$$[
          Pattern[$CellContext`ruleNumber, 
           Blank[]], 
          Pattern[$CellContext`case, 
           Blank[]]]] :> Part[
         IntegerDigits[$CellContext`ruleNumber, 2, 16], -$CellContext`case - 
         9]}}, {DownValues[$CellContext`configurationVector$$] = {
      HoldPattern[
         $CellContext`configurationVector$$[{
           Pattern[$CellContext`aM, 
            Blank[]], 
           Pattern[$CellContext`sV, 
            Blank[]]}]] :> 
       Normal[4 $CellContext`sV + Dot[$CellContext`aM, $CellContext`sV]]}}, {
    DownValues[$CellContext`newState$$] = {HoldPattern[
         $CellContext`newState$$[{
           Pattern[$CellContext`aM$, 
            Blank[]], 
           Pattern[$CellContext`sV$, 
            Blank[]]}, 
          Pattern[$CellContext`ruleNumber$, 
           Blank[]]]] :> SparseArray[
         Map[$CellContext`ruleState$$[$CellContext`ruleNumber$, #]& , 
          $CellContext`configurationVector$$[{$CellContext`aM$, \
$CellContext`sV$}]]]}}, {DownValues[$CellContext`evolve$$] = {HoldPattern[
         $CellContext`evolve$$[{
           Pattern[$CellContext`aM$, 
            Blank[]], 
           Pattern[$CellContext`sV$, 
            Blank[]]}, 
          Pattern[$CellContext`rN$, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`it$, 
            Blank[]], 1]]] :> 
       Module[{$CellContext`divisionVector = 
          Map[$CellContext`ruleDivision$$[$CellContext`rN$, #]& , 
            $CellContext`configurationVector$$[{$CellContext`aM$, \
$CellContext`sV$}]], $CellContext`adjacencyMatrix = $CellContext`aM$, \
$CellContext`stateVector = $CellContext`newState$$[{$CellContext`aM$, \
$CellContext`sV$}, $CellContext`rN$], $CellContext`replicate, \
$CellContext`vertexNumber, $CellContext`state, $CellContext`line, \
$CellContext`ones, $CellContext`insert, $CellContext`subMatrix}, \
$CellContext`replicate[
            Pattern[$CellContext`v, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`n, 
             Blank[]]] := Nest[Insert[#, 
             
             Part[#, $CellContext`p], $CellContext`p]& , $CellContext`v, \
$CellContext`n]; While[
           Not[
            FreeQ[$CellContext`divisionVector, 1]], $CellContext`vertexNumber = 
            Part[
              Part[
               Position[$CellContext`divisionVector, {1}], 1], 
              1]; $CellContext`stateVector = \
$CellContext`replicate[$CellContext`stateVector, $CellContext`vertexNumber, 
              2]; $CellContext`line = Normal[
              
              Part[$CellContext`adjacencyMatrix, $CellContext`vertexNumber]]; \
$CellContext`ones = Catenate[
              Position[$CellContext`line, 1]]; $CellContext`adjacencyMatrix = 
            Delete[$CellContext`adjacencyMatrix, $CellContext`vertexNumber]; \
$CellContext`insert = SparseArray[{{1, 
                 Part[$CellContext`ones, 1]} -> 1, {2, 
                 Part[$CellContext`ones, 2]} -> 1, {3, 
                 Part[$CellContext`ones, 3]} -> 1}, {3, 
               Length[$CellContext`line]}]; 
           Do[$CellContext`adjacencyMatrix = 
             Insert[$CellContext`adjacencyMatrix, 
               
               Part[$CellContext`insert, $CellContext`i], \
$CellContext`vertexNumber], {$CellContext`i, 1, 
              3}]; $CellContext`adjacencyMatrix = 
            Transpose[$CellContext`adjacencyMatrix]; $CellContext`line = 
            Normal[
              
              Part[$CellContext`adjacencyMatrix, $CellContext`vertexNumber]]; \
$CellContext`ones = Catenate[
              Position[$CellContext`line, 1]]; $CellContext`adjacencyMatrix = 
            Delete[$CellContext`adjacencyMatrix, $CellContext`vertexNumber]; \
$CellContext`insert = SparseArray[{{1, 
                 Part[$CellContext`ones, 1]} -> 1, {2, 
                 Part[$CellContext`ones, 2]} -> 1, {3, 
                 Part[$CellContext`ones, 3]} -> 1}, {3, 
               Length[$CellContext`line]}]; 
           Do[$CellContext`adjacencyMatrix = 
             Insert[$CellContext`adjacencyMatrix, 
               
               Part[$CellContext`insert, $CellContext`i], \
$CellContext`vertexNumber], {$CellContext`i, 1, 3}]; 
           Part[$CellContext`adjacencyMatrix, 
              Span[$CellContext`vertexNumber, $CellContext`vertexNumber + 2], 
              
              
              Span[$CellContext`vertexNumber, $CellContext`vertexNumber + 
               2]] = {{0, 1, 1}, {1, 0, 1}, {1, 1, 
             0}}; $CellContext`divisionVector = $CellContext`replicate[
              
              ReplacePart[$CellContext`divisionVector, \
$CellContext`vertexNumber -> {0}], $CellContext`vertexNumber, 2]; Null]; 
         Return[{$CellContext`adjacencyMatrix, $CellContext`stateVector}]; 
         Null]}}, {DownValues[$CellContext`generateList$$] = {HoldPattern[
         $CellContext`generateList$$[
          Pattern[$CellContext`rl$, 
           Blank[]], 
          Pattern[$CellContext`stps$, 
           Blank[]], 
          Pattern[$CellContext`max$, 
           Blank[]]]] :> 
       Module[{$CellContext`inRule$ = $CellContext`rl$, $CellContext`inSteps$ = \
$CellContext`stps$, $CellContext`maxTime$ = $CellContext`max$, \
$CellContext`inList$ = {
            Length[
             
             Part[{SparseArray[
               Automatic, {10, 10}, 0, {
                1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{2}, {9}, {
                  10}, {1}, {3}, {4}, {2}, {4}, {5}, {2}, {3}, {6}, {3}, {
                  6}, {7}, {4}, {5}, {8}, {5}, {8}, {9}, {6}, {7}, {10}, {
                  1}, {7}, {10}, {1}, {8}, {9}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 
                 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                 1}}], SparseArray[
               Automatic, {10, 1}, 0, {
                1, {{0, 1, 1, 1, 1, 1, 2, 3, 3, 4, 5}, {{1}, {1}, {1}, {1}, {
                  1}}}, {1, 1, 1, 1, 1}}]}, 2]]}, $CellContext`inGraph$ = {
           SparseArray[
            Automatic, {10, 10}, 0, {
             1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30}, {{2}, {9}, {10}, {
               1}, {3}, {4}, {2}, {4}, {5}, {2}, {3}, {6}, {3}, {6}, {7}, {
               4}, {5}, {8}, {5}, {8}, {9}, {6}, {7}, {10}, {1}, {7}, {10}, {
               1}, {8}, {9}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], SparseArray[
            Automatic, {10, 1}, 0, {
             1, {{0, 1, 1, 1, 1, 1, 2, 3, 3, 4, 5}, {{1}, {1}, {1}, {1}, {
               1}}}, {1, 1, 1, 1, 1}}]}, $CellContext`i$}, TimeConstrained[
           
           For[$CellContext`i$ = 1, $CellContext`i$ <= $CellContext`inSteps$, 
            
            
            Increment[$CellContext`i$], $CellContext`inGraph$ = \
$CellContext`evolve$$[$CellContext`inGraph$, $CellContext`inRule$]; 
            AppendTo[$CellContext`inList$, 
              Length[
               Part[$CellContext`inGraph$, 2]]]], $CellContext`maxTime$]; 
         Return[$CellContext`inList$]; Null]}}}]], "Output",
 CellChangeTimes->{
  3.87051316174531*^9, {3.8706684533668623`*^9, 3.8706684543759413`*^9}},
 TextAlignment->Center,
 CellLabel->
  "Out[289]=",ExpressionUUID->"8e3433a9-de85-4680-af4e-99f9d6f66012"]
}, {2}]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 847},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/rules.nb"},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"254e71a4-8d14-4e17-87d1-013f5c56b152"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 291, 6, 86, "Title",ExpressionUUID->"97c541a1-e5a6-4c52-a03f-611bfc4ac6e8"],
Cell[874, 30, 154, 3, 31, "Author",ExpressionUUID->"86c5f2e4-1932-4580-b905-e0648ac0836b"],
Cell[1031, 35, 71, 0, 35, "Text",ExpressionUUID->"f25444f9-5e36-4e3e-aba1-b1dc74728883"],
Cell[CellGroupData[{
Cell[1127, 39, 148, 3, 67, "Section",ExpressionUUID->"c6af423b-65b0-4ef3-abf0-0912e38937c0"],
Cell[CellGroupData[{
Cell[1300, 46, 50958, 1044, 1644, "Input",ExpressionUUID->"517d5bcb-7972-4ef0-ab29-92906cc91c66",
 InitializationCell->True],
Cell[52261, 1092, 27467, 506, 264, "Output",ExpressionUUID->"cd237b64-34b4-4948-ad23-7cc63dd913bf"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79774, 1604, 300, 5, 67, "Section",ExpressionUUID->"8b1a75de-e221-4835-9cf5-1f595d975ed0"],
Cell[CellGroupData[{
Cell[80099, 1613, 24838, 604, 1880, "Input",ExpressionUUID->"84003cbe-3035-4bc0-a64c-158b387b9024",
 InitializationCell->True],
Cell[104940, 2219, 102008, 1595, 527, "Output",ExpressionUUID->"1f92f9c0-4e3b-4c74-b29a-bfc6001b85d5"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206994, 3820, 299, 5, 67, "Section",ExpressionUUID->"553dd506-7ca7-4399-926f-aab15e8ada83"],
Cell[CellGroupData[{
Cell[207318, 3829, 27134, 647, 1901, "Input",ExpressionUUID->"7a6f7feb-3264-4f78-a129-90b1b5c87755",
 InitializationCell->True],
Cell[234455, 4478, 14046, 298, 467, "Output",ExpressionUUID->"8e3433a9-de85-4680-af4e-99f9d6f66012"]
}, {2}]]
}, Open  ]]
}, Open  ]]
}
]
*)

